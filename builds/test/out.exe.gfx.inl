// Generated with Shader Minifier 1.3.6 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADER_MINIFIER_IMPL
#ifndef SHADER_MINIFIER_HEADER
# define SHADER_MINIFIER_HEADER
# define VAR_backBuffer0 "v"
# define VAR_outColor0 "i"
# define VAR_waveOutPosition "m"
#endif
#else // if SHADER_MINIFIER_IMPL
// graphics_fragment_shader.i
"#version 430\n"
 "layout(binding=0) uniform sampler2D v;"
 "layout(location=0) uniform int m;"
 "vec2 f=vec2(1920,1080);"
 "float n=m/4.8e4;"
 "layout(location=0) out vec4 i;"
 "float y;"
 "int c;"
 "const float x=acos(-1.);"
 "const vec3 d=vec3(1,.5,.1),s=vec3(.8,.8,.9);"
 "vec3 t(vec3 v)"
 "{"
   "uvec3 f=floatBitsToUint(v);"
   "f=(f>>8U^f.yzx)*1103515245u;"
   "f=(f>>8U^f.yzx)*1103515245u;"
   "f=(f>>8U^f.yzx)*1103515245u;"
   "return vec3(f)/float(-1u);"
 "}"
 "vec3 p(vec2 v)"
 "{"
   "vec2 f=floor(v),m=fract(v);"
   "m=m*m*(3.-2.*m);"
   "vec3 c=mix(t(vec3(f,.12)),t(vec3(f+vec2(1,0),.12)),m.x),x=mix(t(vec3(f+vec2(0,1),.12)),t(vec3(f+vec2(1),.12)),m.x);"
   "return mix(c,x,m.y);"
 "}"
 "vec3 h(vec2 v)"
 "{"
   "float m=1.;"
   "vec4 f=vec4(0);"
   "for(int c=0;c<6;c++)"
     "f+=m*vec4(p(v),1),m*=.5,v*=mat2(-1.4747,1.351,-1.351,-1.4747);"
   "return f.xyz/f.w;"
 "}"
 "float r(float v)"
 "{"
   "return v*v*(v*v)*v;"
 "}"
 "vec3 h(vec3 v,float y,float m,vec3 f,vec3 z,vec3 c)"
 "{"
   "float a=m*m;"
   "a=max(a,.001);"
   "vec3 d=.04*(1.-y)+v*y,l=normalize(f+z);"
   "float s=clamp(dot(c,z),0.,1.)+1e-5,e=clamp(dot(c,f),0.,1.),n=clamp(dot(c,l),0.,1.),u=clamp(dot(f,l),0.,1.),t=n*a,i=a/(1.-n*n+t*t),p=a*a,b=.5+2.*a*u*u;"
   "return(i*i/x*(.5/(e*sqrt(max(0.,s*s*(1.-p)+p))+s*sqrt(max(0.,e*e*(1.-p)+p))))*(d+(1.-d)*r(1.-u))+v*(1.-y)*((1.+(b-1.)*r(1.-e))*(1.+(b-1.)*r(1.-s))/x))*e;"
 "}"
 "float h(vec3 v,vec3 y)"
 "{"
   "vec3 f=abs(v)-y*.5;"
   "return min(max(f.x,max(f.y,f.z)),0.)+length(max(f,0.));"
 "}"
 "vec2 a;"
 "float e(vec3 v)"
 "{"
   "a=floor(v.xy/vec2(3,2))*vec2(3,2)+vec2(1.5,1);"
   "vec3 f=v;"
   "v.xy-=a;"
   "vec3 m=t(vec3(a,1));"
   "float l,i;"
   "vec3 z;"
   "bool n=fract(.5*a.x/3.)<.5;"
   "z=abs(fract(f*10)-.5);"
   "float s=min(dot(vec3(1),smoothstep(.02,0.,z)),1)*.001,d=v.y-clamp((v.x+1)*.5,0.,1.)*2-.5,r=min(min(max((min(abs(d),abs(d+2))-.5)*.4,-v.z),-v.z+3),max(abs(v.x)-1,-v.z+.5));"
   "r+=s;"
   "z=v-vec3(-1.35,0,-.07);"
   "z.x=abs(z.x-.1)-.1;"
   "r=min(r,length(z.xz)-.07);"
   "z.y=abs(fract(z.y)-.5)-.07;"
   "r=min(r,h(z+vec3(.1,0,0),vec3(.05,0,0))-.01);"
   "vec2 e=abs(vec2(length(z.xz),z.y))-vec2(.08,.02);"
   "r=min(r,min(max(e.x,e.y),0.)+length(max(e,0.)));"
   "float b=-v.z-.11;"
   "b=max(b,-h(v,vec3(2.8,1.8,4)));"
   "z=v;"
   "z.z-=.75;"
   "z.x=abs(abs(z.x)-.4);"
   "b=min(b,h(z,vec3(3,2,.05)));"
   "b=max(b,-h(z-vec3(.4,-.135,0),vec3(.7,1.35,.1)));"
   "b=min(b,h(v-vec3(0,-.5,.1),vec3(2.8,.6,.025))-.01);"
   "z=v-vec3(.2*clamp(round(v.x/.2),-6,6),-.5,.1);"
   "b=max(b,-h(z,vec3(.1,.5,.05)));"
   "b=min(b,h(v+vec3(0,.225,0),vec3(2.8,.05,.2))-.01);"
   "z=v-vec3(1.15,-.76,0);"
   "l=h(z,vec3(.4,.3,.15)-.02);"
   "z-=vec3(-.06,0,-.11);"
   "l=max(l,-h(z,vec3(0,0,.1))+.1);"
   "z.z-=.05;"
   "z.y-=.01*clamp(round(z.y/.01),-9,9);"
   "l=min(l,h(z,vec3(.2,0,0))-.002);"
   "b=min(b,l);"
   "float p=n?"
     "r:"
     "b,u=smoothstep(0.,2.,1.-v.y);"
   "vec3 g=v;"
   "g.x*=mix(1.2,1.,u);"
   "float o=y+m.x*x*2.,B=cos(g.x*25.+cos(g.x*8.))+cos(g.x*4.+o+.5*cos(o));"
   "g.z-=1.+.05*B*u;"
   "l=h(g,vec3(2.6,1.6,.01))*.5-.01;"
   "l+=float(n)*1e9;"
   "c=l<p?"
     "1:"
     "0;"
   "p=min(p,l);"
   "i=length(v-vec3(sign(m.x-.5),-.09,0))-.1;"
   "l=length(v-vec3(-1.4,-.9,2.9))-.1;"
   "l=n?"
     "l:"
     "i;"
   "c=l<p?"
     "2:"
     "c;"
   "return min(p,l);"
 "}"
 "vec2 e(vec3 v,vec3 m,out vec3 f)"
 "{"
   "float z=1.,l,c=0.;"
   "for(int b=0;b<256;b++)"
     "{"
       "f=m+v*c;"
       "f.z=90.<=y&&y<105.?"
         "abs(f.z)-2.:"
         "f.z;"
       "f.xz=105.<=y&&y<120.?"
         "vec2((atan(f.z,f.x)+x)/x*24,length(f.xz)-8.):"
         "f.xz;"
       "float d=y/.1171875/32+.125+floor(f.x/6)/4;"
       "f.y+=4.*(floor(d)-pow(1./(1.+fract(d)*8),5.))*sign(fract(f.x/12)-.5)*float(90.<=y&&y<120.);"
       "f.z+=cos(length(floor(f.xy/vec2(3,2))+vec2(1.5,1))+y)*max(0,(y-90.)/45.);"
       "l=e(f);"
       "z=max(min(z,256*l/c),.05);"
       "vec2 a=floor(f.xy/vec2(3,2)+sign(v.xy))*vec2(3,2)+vec2(1.5,1),r=abs(a-f.xy)-vec2(1.5,1);"
       "r=max(r,0.)/abs(v.xy)+.001+step(f.z,-9.)*1e2;"
       "float p=min(r.x,r.y);"
       "l=min(p,l);"
       "c+=l;"
       "if(l<.001)"
         "return vec2(1,.05);"
       "if(c>1e2)"
         "return vec2(0,z);"
     "}"
   "return vec2(1,z);"
 "}"
 "const vec3 l=normalize(vec3(1.5,1.5,-1));"
 "void main()"
 "{"
   "y=n;"
   "const vec2 m=gl_FragCoord.xy,z=f.xy,b=m/z;"
   "const vec3 r=t(vec3(m,y));"
   "vec3 p,g,u;"
   "float o=y/15.;"
   "int B=int(o)%9;"
   "float w=fract(o)*step(o,9),C=B==4?"
     "(floor(w*4.)+w)*.25:"
     "w;"
   "p=mix(vec3[](vec3(.2,.2,2.2),vec3(.4,.2,2),vec3(-2.2,-1,-.2),vec3(-.5,-1.8,-.3),vec3(0,0,-3),vec3(0,0,-6),vec3(0),vec3(0),vec3(0,0,-4))[B],vec3[](vec3(.1,.1,1.5),vec3(.35,.6,.4),vec3(-.1,-1,-.2),vec3(-2.8,-1.8,-.3),vec3(0,0,-15),vec3(0,40,-9),vec3(-70,0,0),vec3(0,70,0),vec3(0,0,-25))[B],C);"
   "g=normalize(mix(vec3[](vec3(.5,1.5,1),vec3(-.5,-1,-1),vec3(-1,-.1,.3),vec3(.8,.8,1),vec3(0,0,1),vec3(-.2,.5,1),vec3(-1,.2,0),vec3(1,1,0),vec3(0,0,1))[B],vec3[](vec3(.1,.1,1),vec3(0,.5,-1),vec3(-1,-.1,1),vec3(.1,.8,1.5),vec3(0,0,1),vec3(.2,.5,1),vec3(-1,-.2,0),vec3(0,1,.1),vec3(0,0,1))[B],C));"
   "const vec3 A=normalize(cross(vec3(0,1,0),g));"
   "u=normalize(mat3(A,normalize(cross(g,A)),g)*vec3((b-.5+(r.xy-.5)*.25/z)*2.*(z/min(z.x,z.y)),1./tan(70.*x/360.)));"
   "vec3 D;"
   "vec2 E=e(u,p,D),F=vec2(1,-1);"
   "int G=c;"
   "vec3 H=normalize(F.xyy*e(D+F.xyy*.001)+F.yyx*e(D+F.yyx*.001)+F.yxy*e(D+F.yxy*.001)+F.xxx*e(D+F.xxx*.001));"
   "c=G;"
   "vec3 I=sign(H)*abs(H);"
   "I/=dot(vec3(1),I);"
   "vec2 J=(I.x*D.zy+I.y*D.xz+I.z*D.xy)*vec2(3,1);"
   "vec3 K=D;"
   "K.xy-=a;"
   "vec3 L=t(vec3(a,1));"
   "bool M=fract(.5*a.x/3.)<.5;"
   "float N=0.;"
   "vec3 O=vec3(1);"
   "float P=.5,Q=.5;"
   "vec3 R=mix(d,s,L.z);"
   "if(c==0)"
     "{"
       "vec3 S=h(J*3.),T=h(J*96.);"
       "O=vec3(min(1,mix(.5,1.,S.y)*mix(.9,1.,pow(T.x,3.))));"
       "P=O.x;"
       "Q=.01;"
       "H=normalize(H+(S-.5)*.1);"
     "}"
   "else if(c==1)"
     "O=vec3[](vec3(.8,.7,.6),vec3(.8,.2,.2),vec3(.5,.7,.8))[int(L.x*3.)],P=.99,Q=.01;"
   "else"
     " N=1.,O=R;"
   "D+=H*.001*2.;"
   "vec3 S;"
   "vec2 T=e(l,D,S);"
   "vec3 U=vec3(0);"
   "U+=T.y*h(O,Q,P,l,-u,H)*s;"
   "vec3 V=(M?"
     "vec3(-1.4,-.9,2.9):"
     "vec3(sign(L.x-.5),-.06,0))-K;"
   "float W=length(V);"
   "U+=R*pow(1./(1.+max(0.,W-1.)),2.)*h(O,Q,P,V/W,-u,H);"
   "U*=sqrt(clamp(e(D+H*.05)/.05,0.,1.));"
   "U=mix(U,O,N);"
   "vec3 X=vec3(mix(.01,.3,clamp((u.y+.5)*.5,0.,1.)))*smoothstep(1.,.9,u.y),Y=mix(X,U,E.x);"
   "Y+=r*.03;"
   "Y=pow(Y,vec3(.8));"
   "Y=Y*(2.51*Y+.03)/(Y*(2.43*Y+.59)+.14);"
   "Y*=min((.5-abs(w-.5))*10,1);"
   "vec4 Z=vec4(Y,1);"
   "i=mix(Z,textureLod(v,b,2.),.5);"
 "}" 
#endif

