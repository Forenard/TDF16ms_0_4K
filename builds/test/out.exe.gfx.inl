// Generated with Shader Minifier 1.3.6 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADER_MINIFIER_IMPL
#ifndef SHADER_MINIFIER_HEADER
# define SHADER_MINIFIER_HEADER
# define VAR_backBuffer0 "v"
# define VAR_backBuffer1 "m"
# define VAR_outColor0 "f"
# define VAR_outColor1 "r"
# define VAR_waveOutPosition "i"
#endif
#else // if SHADER_MINIFIER_IMPL
// graphics_fragment_shader.i
"#version 430\n"
 "layout(binding=0) uniform sampler2D v;"
 "layout(binding=1) uniform sampler2D m;"
 "layout(location=0) uniform int i;"
 "vec2 n=vec2(1920,1080);"
 "float a=i/4.8e4;"
 "layout(location=0) out vec4 f;"
 "layout(location=1) out vec4 r;"
 "float x;"
 "int c;"
 "const float y=acos(-1.),z=2.*y,s=y*(3.-sqrt(5.));"
 "const vec3 o=vec3(255,137,14)/255.,p=vec3(191,211,255)/255.;"
 "mat2 t(float v)"
 "{"
   "float m=cos(v),g=sin(v);"
   "return mat2(m,-g,g,m);"
 "}"
 "vec2 e(float v)"
 "{"
   "return vec2(cos(v),sin(v));"
 "}"
 "vec2 h(vec2 v)"
 "{"
   "float f=atan(v.y,v.x)+z-y*.5+y/32.;"
   "f=mod(f,z/32.)+y*.5-y/32.;"
   "return e(f)*length(v);"
 "}"
 "vec2 e(vec3 g,vec3 v)"
 "{"
   "v=sign(v)*pow(abs(v),vec3(1));"
   "v/=dot(vec3(1),v);"
   "return v.x*g.zy+v.y*g.xz+v.z*g.xy;"
 "}"
 "mat3 d(vec3 v)"
 "{"
   "v=normalize(v);"
   "vec3 f=vec3(0,1,0),m=normalize(cross(f,v));"
   "f=normalize(cross(v,m));"
   "return mat3(m,f,v);"
 "}"
 "bool d(float v,float m,out float f)"
 "{"
   "f=(x-v)/(m-v);"
   "return 0.<=f&&f<1.;"
 "}"
 "uvec3 w(uvec3 v)"
 "{"
   "v=v*1664525u+1013904223u;"
   "v.x+=v.y*v.z;"
   "v.y+=v.z*v.x;"
   "v.z+=v.x*v.y;"
   "v^=v>>16u;"
   "v.x+=v.y*v.z;"
   "v.y+=v.z*v.x;"
   "v.z+=v.x*v.y;"
   "return v;"
 "}"
 "vec3 l(vec3 v)"
 "{"
   "uvec3 m=w(floatBitsToUint(v));"
   "return vec3(m)/float(4294967295u);"
 "}"
 "vec3 u(vec2 v)"
 "{"
   "vec2 m=floor(v),g=fract(v);"
   "g=g*g*(3.-2.*g);"
   "vec3 f=mix(l(vec3(m,.12)),l(vec3(m+vec2(1,0),.12)),g.x),x=mix(l(vec3(m+vec2(0,1),.12)),l(vec3(m+vec2(1),.12)),g.x);"
   "return mix(f,x,g.y);"
 "}"
 "vec3 M(vec2 v)"
 "{"
   "const mat2 m=t(s)*2.;"
   "float x=1.;"
   "vec4 g=vec4(0);"
   "for(int f=0;f<6;f++)"
     "g+=x*vec4(u(v),1),x*=.5,v*=m;"
   "return g.xyz/g.w;"
 "}struct Material{int type;vec3 albedo;float metallic;float roughness;};"
 "float B(float v)"
 "{"
   "return v*v*(v*v)*v;"
 "}"
 "float B(float v,float x)"
 "{"
   "float g=x*v,f=v/(1.-x*x+g*g);"
   "return f*f*(1./y);"
 "}"
 "float B(float v,float x,float m)"
 "{"
   "float g=v*v;"
   "return.5/(m*sqrt(max(0.,x*x*(1.-g)+g))+x*sqrt(max(0.,m*m*(1.-g)+g)));"
 "}"
 "vec3 M(vec3 v,float g)"
 "{"
   "return v+(1.-v)*B(1.-g);"
 "}"
 "float d(float v,float g)"
 "{"
   "return 1.+(v-1.)*B(1.-g);"
 "}"
 "float B(float x,float v,float m,float g)"
 "{"
   "float f=.5+2.*x*g*g;"
   "return d(m,f)*d(v,f)*(1./y);"
 "}"
 "vec3 M(Material v,vec3 m,vec3 x,vec3 f)"
 "{"
   "vec3 y=v.albedo;"
   "float g=v.metallic,c=v.roughness,r=c*c;"
   "r=max(r,.001);"
   "vec3 i=normalize(m+x);"
   "float o=clamp(dot(f,x),0.,1.)+1e-5,z=clamp(dot(f,m),0.,1.),n=clamp(dot(m,i),0.,1.),l=B(r,clamp(dot(f,i),0.,1.)),p=B(r,o,z);"
   "vec3 s=y*(1.-g)*B(r,o,z,n);"
   "return(l*p*M(.04*(1.-g)+y*g,n)+s)*z;"
 "}"
 "float M(float v,float g,float m)"
 "{"
   "return max(m,min(v,g))-length(max(vec2(m-v,m-g),vec2(0)));"
 "}"
 "float e(float v,float g,float m)"
 "{"
   "return min(-m,max(v,g))+length(max(vec2(m+v,m+g),vec2(0)));"
 "}"
 "float h(float v,float g,float m)"
 "{"
   "return e(v,-g,m);"
 "}"
 "float h(vec3 v,vec3 x)"
 "{"
   "vec3 g=abs(v)-x*.5;"
   "return min(max(g.x,max(g.y,g.z)),0.)+length(max(g,0.));"
 "}"
 "float l(vec3 v,float x)"
 "{"
   "v.y-=clamp(v.y,-x*.5,x*.5);"
   "return length(v)-.02;"
 "}"
 "float l(vec3 v,float m,float g)"
 "{"
   "vec2 f=abs(vec2(length(v.xz),v.y))-vec2(g,m);"
   "return min(max(f.x,f.y),0.)+length(max(f,0.));"
 "}"
 "const vec2 g=vec2(5.7,4)*.5;"
 "vec2 C(inout vec3 v)"
 "{"
   "vec2 m=floor(v.xy/g)*g+g*.5;"
   "v.xy=mod(v.xy,g)-.5*g;"
   "return m;"
 "}"
 "float b(vec3 v)"
 "{"
   "vec3 m=v;"
   "vec2 f=C(v);"
   "vec3 i=l(vec3(f,0));"
   "float r;"
   "if(mod(f.x,g.x*2.)<g.x)"
     "{"
       "m=abs(fract(m*10.)-.5);"
       "float x=clamp(smoothstep(.04,.02,m.x)+smoothstep(.04,.02,m.y),0.,1.)*.002;"
       "const float y=g.x*.2;"
       "float c=min(max((v.x--g.x*.5-y)/(g.x*.5-y--g.x*.5-y),0.),1.)*g.y+g.y*.25,z=v.y-c;"
       "r=(min(abs(z),abs(z+g.y))-g.y*.25)*(y*2./sqrt(g.y*g.y+y*y*4.));"
       "r=max(r,-v.z);"
       "r=min(r,-v.z+3.);"
       "r=min(r,max(abs(v.x)-g.x*.5+y,-v.z+.5));"
       "r+=x*.5;"
       "v-=vec3(-g.x*.45,0,-.07);"
       "v.x=abs(v.x-.1)-.1;"
       "r=min(r,length(v.xz)-.07);"
       "v.y=mod(v.y,1.)-.5;"
       "v.y=abs(v.y)-.06;"
       "r=min(r,l((v-vec3(-.11,0,0)).yxz,.04,.01));"
       "return min(r,l(v,.02,.08));"
     "}"
   "{"
     "r=-v.z;"
     "r=h(r,h(v,vec3(g-.2,4)),.01);"
     "vec3 x=v-vec3(0,0,.75);"
     "x.x=abs(x.x);"
     "vec2 c=g-.2;"
     "r=M(r,h(x,vec3(c,.05)),.01);"
     "vec3 y=vec3(c.x*.25-.125,c.y*.75,.1);"
     "r=h(r,h(x-vec3(y.x*.5+.05,-y.y*.1,0),y),.01);"
     "y.y*=.5;"
     "r=h(r,h(x-vec3(y.x*1.5+.15,y.y*.3,0),y),.01);"
     "r=min(r,-.01+h(v-vec3(0,-g.y*.25,.1),vec3(g.x-.2,g.y*.3,.025)));"
     "vec3 a=v-vec3(0,-g.y*.25,.1);"
     "a.x=a.x-.2*clamp(round(a.x/.2),-12,12);"
     "r=h(r,h(a,vec3(.06,g.y*.25,.05)),.01);"
     "r=min(r,-.01+h(v-vec3(0,-g.y*.1-.025,0),vec3(g.x-.2,.05,.2)));"
     "r=min(r,-.01+h(v-vec3(0,-.5*(g.y-.2)-.05,0),vec3(g.x,.05,.15)));"
     "r=M(r,l(v-vec3(sign(i.x-.5),-.18,0),.01,.075)-.01,.005);"
     "vec3 s=v-vec3(1.1,-.77,-.02);"
     "float z=-.01+h(s,vec3(.4,.28,.1));"
     "vec3 e=s-vec3(-.06,0,-.1);"
     "z=h(z,l(e.xzy,.1,.1),.005);"
     "e.z-=.05;"
     "z=min(z,-.002+l(e.xzy,.02,.02));"
     "e.xy=h(e.xy);"
     "z=M(z,l(e,.1,.002),.005);"
     "r=min(r,z);"
   "}"
   "return r;"
 "}"
 "float A(vec3 v)"
 "{"
   "vec2 m=C(v);"
   "vec3 f=l(vec3(m,0));"
   "if(mod(m.x,g.x*2.)<g.x)"
     "return 1e2;"
   "float i=smoothstep(0.,1.5,.9-v.y);"
   "vec3 r=v;"
   "r.x*=mix(1.1,1.,i);"
   "float c=f.x*z,s=x*.5+c,o=cos(c+r.x*y*7.+.5*y*cos(r.x*7.))*.05+cos(r.x*2.+s*2.+.5*y*cos(s))*.05;"
   "r-=vec3(0,0,1.+o*i);"
   "return h(r,vec3(g-.4,.01))*.5-.01;"
 "}"
 "float D(vec3 v)"
 "{"
   "vec2 m=C(v);"
   "vec3 f=l(vec3(m,0));"
   "return mod(m.x,g.x*2.)<g.x?"
     "1e2:"
     "length(v-vec3(sign(f.x-.5),-.06,0))-.1;"
 "}"
 "float E(vec3 v)"
 "{"
   "vec2 m=C(v);"
   "if(mod(m.x,g.x*2.)>g.x)"
     "return 1e2;"
   "vec3 f=v;"
   "f=vec3(abs(f.x)-g.x*.375,f.y+g.y*.065,f.z-2.85);"
   "f.zy*=t(.3);"
   "f.xy*=t(.65);"
   "return l(f,g.x*.2);"
 "}"
 "void A(float v,inout float m,inout int f)"
 "{"
   "if(v<m)"
     "m=v,c=f;"
   "f++;"
 "}"
 "float F(vec3 v)"
 "{"
   "int m=0;"
   "c=-1;"
   "float f=1e2;"
   "A(D(v),f,m);"
   "A(E(v),f,m);"
   "A(A(v),f,m);"
   "A(b(v),f,m);"
   "return f;"
 "}"
 "vec3 G(vec3 v)"
 "{"
   "const vec2 m=vec2(1,-1);"
   "int f=c;"
   "vec3 r=normalize(m.xyy*F(v+m.xyy*.001)+m.yyx*F(v+m.yyx*.001)+m.yxy*F(v+m.yxy*.001)+m.xxx*F(v+m.xxx*.001));"
   "c=f;"
   "return r;"
 "}"
 "vec3 C(vec3 v,vec3 m,vec3 g)"
 "{"
   "vec3 f=abs((floor((v+sign(m)*g)/g)+.5)*g-v)-.5*g;"
   "f=max(f,0.);"
   "f/=abs(m);"
   "return f;"
 "}"
 "vec2 D(vec3 v,vec3 m,out vec3 f)"
 "{"
   "float r=1.,x=1e2,c,i=0.;"
   "for(int e=0;e<256;e++)"
     "{"
       "f=m+v*i;"
       "float o;"
       "if(d(90.,105.,o))"
         "f.z=abs(f.z)-2.;"
       "if(d(105.,120.,o))"
         "f.xz=vec2((atan(f.z,f.x)+y)/z*g.x*8.,length(f.xz)),f.z-=4.;"
       "c=F(f);"
       "float s=c*c/(2.*x),n=sqrt(c*c-s*s);"
       "r=min(r,n/(.02*max(0.,i-s)));"
       "x=c;"
       "vec3 a=C(f,v,vec3(g,1000));"
       "a+=f.z<-2.?"
         "1e9:"
         "0.;"
       "c=min(c,a.x+.001);"
       "c=min(c,a.y+.001);"
       "i+=c;"
       "if(c<.001)"
         "return vec2(1,.1);"
       "if(i>1e2)"
         "return vec2(0,max(r,.1));"
     "}"
   "return vec2(0,max(r,.1));"
 "}"
 "Material A(vec3 v,inout vec3 f)"
 "{"
   "Material r=Material(0,vec3(1),.5,.5);"
   "vec2 m=e(v,f),g=C(v);"
   "if(c==0)"
     "{"
       "r.type=1;"
       "vec3 i=l(vec3(.2,g));"
       "r.albedo=(step(i.y,.9)*.8+.2)*mix(o,p,i.x);"
     "}"
   "else if(c==1)"
     "r.type=1,r.albedo=p*2.*(step(l(vec3(g,floor(x*10.))).x,.95)*.5+.5);"
   "else if(c==2)"
     "{"
       "vec3 i=l(vec3(.2,g));"
       "float n=i.x;"
       "r.albedo=n<.7?"
         "vec3(.8,.7,.6):"
         "n<.8?"
           "vec3(.8,.2,.2):"
           "n<.9?"
             "vec3(.8,.6,.3):"
             "vec3(.5,.7,.8);"
       "r.roughness=.99;"
       "r.metallic=.01;"
     "}"
   "else"
     "{"
       "vec3 y=M(m*3.*vec2(3,1)),i=M(m*96.*vec2(2,1));"
       "r.albedo=vec3(clamp(1.3*mix(.6,1.,y.y)*mix(.8,1.,pow(i.x,3.)),0.,1.));"
       "r.roughness=mix(.5,1.,pow(y.y,3.));"
       "r.metallic=.01;"
       "f=normalize(f+(y*2.-1.)*.05);"
     "}"
   "return r;"
 "}"
 "const vec3 H=normalize(vec3(1,1,-1));"
 "vec3 I(vec3 v)"
 "{"
   "vec2 m=vec2(atan(v.x,-v.z),acos(v.y)*2.)/z*20.+vec2(.05,.01)*x;"
   "vec3 f=vec3(mix(.1,.5,M(m).x)),r=mix(vec3(.01),f,clamp((v.y+.5)*.5,0.,1.));"
   "float g=clamp(dot(v,H),0.,1.);"
   "g=smoothstep(.8,1.,g);"
   "r*=mix(1.,3.,g);"
   "r=mix(r,vec3(1),pow(min(max((g*g-.995)/.005,0.),1.),5.));"
   "r*=min(max((v.y-1.)/-.1,0.),1.);"
   "return r;"
 "}"
 "vec3 A(Material v,vec3 m,vec3 f,vec3 g)"
 "{"
   "vec3 r=vec3(0);"
   "const vec2 i=vec2(1,-1);"
   "vec3 x=-normalize(i.xyy*D(m+i.xyy*.001)+i.yyx*D(m+i.yyx*.001)+i.yxy*D(m+i.yxy*.001)+i.xxx*D(m+i.xxx*.001));"
   "float y=max(0.,D(m)-1.);"
   "vec3 z=g;"
   "c=0;"
   "Material e=A(m,z);"
   "vec3 s=e.albedo*pow(1./(1.+y),2.);"
   "r+=M(v,x,f,g)*s;"
   "x=-normalize(i.xyy*E(m+i.xyy*.001)+i.yyx*E(m+i.yyx*.001)+i.yxy*E(m+i.yxy*.001)+i.xxx*E(m+i.xxx*.001));"
   "y=max(0.,E(m));"
   "z=g;"
   "c=1;"
   "e=A(m,z);"
   "s=e.albedo*pow(1./(1.+y),2.);"
   "r+=M(v,x,f,g)*s;"
   "return r;"
 "}"
 "vec3 E(inout vec3 v,vec3 f,vec3 m)"
 "{"
   "Material g=A(v,m);"
   "v+=m*.001*2.;"
   "vec3 x;"
   "vec2 i=D(H,v,x);"
   "vec3 r=vec3(0);"
   "r+=M(g,H,f,m)*p*i.y;"
   "r+=A(g,v,f,m);"
   "r*=sqrt(clamp(F(v+m*.05)/.05,0.,1.));"
   "return mix(r,g.albedo,g.type);"
 "}"
 "const vec2 J=gl_FragCoord.xy,K=n.xy,L=K/min(K.x,K.y);"
 "vec2 N=vec2(.5);"
 "void A(out vec3 v,out vec3 r,out vec3 m,out vec2 f,vec2 i)"
 "{"
   "float c=60.,z=0.;"
   "v=vec3(1);"
   "m=vec3(0,0,1);"
   "float s=0.;"
   "if(d(0.,15.,s))"
     "s=pow(s,.5),v=vec3(.2,-.2,2.2),m=normalize(mix(vec3(.5,1.5,1),vec3(.1,.2,1),s));"
   "else if(d(15.,30.,s))"
     "s=pow(s,.5),c=mix(60.,90.,s),z=mix(0.,.4,s),v=mix(vec3(.4,-1.5,2),vec3(.35,-.5,.3),s),m=i.x<.5?"
       "(N=vec2(.25,.5),normalize(mix(vec3(-.5,-1,1),vec3(0,-1,1),s))):"
       "(N=vec2(.75,.5),normalize(mix(vec3(-.5,-1,-1),vec3(0,0,-1),s)));"
   "else if(d(30.,45.,s))"
     "v=vec3(mix(.8-g.x,-.1,s),-1,0),m=normalize(vec3(-1,-.1,.3));"
   "else if(d(45.,60.,s))"
     "m=i.x<.5?"
       "(N=vec2(.25,.5),v=vec3(mix(-.5,.2-g.x,s),-1.8,-.3),normalize(vec3(1,.2,.8))):"
       "(N=vec2(.75,.5),c=90.,v=mix(vec3(.4-g.x,-1,.7),vec3(-.2,-1.5,.7),s),normalize(vec3(-g.x*.8,-g.y*.5+.5,-1)-v));"
   "else if(d(60.,75.,s))"
     "{"
       "float o=floor(s*3.)*8.+fract(s*3.);"
       "v=vec3(0,0,-1.-o);"
       "m=vec3(0,0,1);"
     "}"
   "else if(d(77.,90.,s))"
     "{"
       "float o=20.*s;"
       "vec3 a=vec3(-g.x*.5+.3,o*g.y,0);"
       "v=a+vec3(mix(3,-3,s),-5,-3);"
       "m=normalize(a-v);"
     "}"
   "else if(d(90.,105.,s))"
     "v=vec3(-x*4.,0,0),m=normalize(vec3(-1,mix(.2,-.2,s),0));"
   "else if(d(105.,120.,s))"
     "v=vec3(0,x*2.,0),m=normalize(vec3(0,1,mix(0.,1.,s))),m.xz*=t(y*s);"
   "f=(i-N)*2.*L;"
   "vec3 n=(M(vec2(-4.2,x*.1))*2.-1.)*.05;"
   "v+=n;"
   "mat3 a=d(m);"
   "float e=1./tan(c*y/360.);"
   "e-=e*length(f)*z;"
   "vec3 o,l,p,H;"
   "o=normalize(a*vec3(f,e));"
   "l=v;"
   "p=m;"
   "H+=a*vec3(f*2.5,0)+v;"
   "r=normalize(mix(p,o,1.));"
   "v=mix(H,l,1.);"
 "}"
 "vec4 C(vec3 v,vec3 m)"
 "{"
   "vec3 f;"
   "if(D(v,m,f).x<.5)"
     "return vec4(I(v),100);"
   "float g=length(f-m);"
   "vec3 s=G(f),r=E(f,-v,s);"
   "return vec4(r,g);"
 "}"
 "float D(float v,float m)"
 "{"
   "return abs(min(1.,m*m)*.3*(m-v)/(abs(v*(m-.3))+1e-9))*10.;"
 "}"
 "vec3 O(vec3 v)"
 "{"
   "return v*(2.51*v+.03)/(v*(2.43*v+.59)+.14);"
 "}"
 "vec3 E(vec3 v,vec3 m)"
 "{"
   "v+=l(m)*.05;"
   "v=pow(v,vec3(.8));"
   "v=O(v);"
   "v.x=smoothstep(-.025,1.025,v.x);"
   "float g=0.;"
   "if(d(0.,10.,g))"
     "v*=g*g;"
   "else if(d(14.,16.,g))"
     "v*=2.*abs(g-.5);"
   "else if(d(29.,31.,g))"
     "v*=2.*abs(g-.5);"
   "else if(d(44.,46.,g))"
     "v*=2.*abs(g-.5);"
   "else if(d(59.,61.,g))"
     "v*=2.*abs(g-.5);"
   "else if(d(74.,77.,g))"
     "v*=clamp(75.-x,0.,1.);"
   "else if(d(119.,120.,g))"
     "v*=1.-g;"
   "else if(x>=120.)"
     "v*=0.;"
   "return v;"
 "}"
 "void main()"
 "{"
   "x=a;"
   "vec2 g=J/K;"
   "g+=(l(vec3(J,x)).xy-.5)*.25/K;"
   "vec2 i;"
   "vec3 y,c,z;"
   "A(y,c,z,i,g);"
   "vec4 o=C(c,y);"
   "o.xyz=E(o.xyz,vec3(-x,4.2*g));"
   "r=max(vec4(0),o);"
   "vec4 M=vec4(0);"
   "float p=textureLod(m,N,3.).w;"
   "vec4 d=texture(m,g);"
   "float u=D(d.w,p);"
   "const float H=sqrt(float(64));"
   "for(int b=0;b<64;b++)"
     "{"
       "float F=float(b);"
       "vec2 L=g+e(F*s)*(u*sqrt(F)/H)/n;"
       "vec4 t=texture(m,L);"
       "float I=t.w;"
       "if(I>0.)"
         "{"
           "float B=D(I,p);"
           "M+=vec4(t.xyz,1)*max(.001,B);"
         "}"
     "}"
   "M.xyz/=M.w;"
   "vec4 t=texture(v,g);"
   "vec3 b=mix(M.xyz,t.xyz,.5);"
   "b=max(vec3(0),b);"
   "f=vec4(b,1);"
 "}" 
#endif

