// Generated with Shader Minifier 1.3.6 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADER_MINIFIER_IMPL
#ifndef SHADER_MINIFIER_HEADER
# define SHADER_MINIFIER_HEADER
# define VAR_backBuffer0 "v"
# define VAR_outColor0 "f"
# define VAR_waveOutPosition "m"
#endif
#else // if SHADER_MINIFIER_IMPL
// graphics_fragment_shader.i
"#version 430\n"
 "layout(binding=0) uniform sampler2D v;"
 "layout(location=0) uniform int m;"
 "vec2 i=vec2(1920,1080);"
 "float n=m/4.8e4;"
 "out vec4 f;"
 "float x;"
 "int c;"
 "const float y=acos(-1.),z=2.*y,o=y*(3.-sqrt(5.));"
 "const vec3 s=vec3(255,137,14)/255.,a=vec3(191,211,255)/255.;"
 "vec2 t(float v)"
 "{"
   "return vec2(cos(v),sin(v));"
 "}"
 "mat2 p(float v)"
 "{"
   "vec2 u=t(v);"
   "return mat2(u.x,u.y,-u.y,u.x);"
 "}"
 "vec2 e(vec2 v)"
 "{"
   "float f=atan(v.y,v.x)+z-y*.5+y/32.;"
   "f=mod(f,z/32.)+y*.5-y/32.;"
   "return t(f)*length(v);"
 "}"
 "bool e(float v,float m,out float f)"
 "{"
   "f=(x-v)/(m-v);"
   "return 0.<=f&&f<1.;"
 "}"
 "vec3 h(vec3 v)"
 "{"
   "uvec3 f=floatBitsToUint(v);"
   "f=(f>>8U^f.yzx)*1103515245u;"
   "f=(f>>8U^f.yzx)*1103515245u;"
   "f=(f>>8U^f.yzx)*1103515245u;"
   "return vec3(f)/float(-1u);"
 "}"
 "vec3 d(vec2 v)"
 "{"
   "vec2 f=floor(v),u=fract(v);"
   "u=u*u*(3.-2.*u);"
   "vec3 m=mix(h(vec3(f,.12)),h(vec3(f+vec2(1,0),.12)),u.x),x=mix(h(vec3(f+vec2(0,1),.12)),h(vec3(f+vec2(1),.12)),u.x);"
   "return mix(m,x,u.y);"
 "}"
 "vec3 l(vec2 v)"
 "{"
   "const mat2 m=p(o)*2.;"
   "float f=1.;"
   "vec4 u=vec4(0);"
   "for(int i=0;i<6;i++)"
     "u+=f*vec4(d(v),1),f*=.5,v*=m;"
   "return u.xyz/u.w;"
 "}struct X{float type;vec3 albedo;float metallic;float roughness;};"
 "float r(float v)"
 "{"
   "return v*v*(v*v)*v;"
 "}"
 "float d(float v,float m)"
 "{"
   "float x=m*v,f=v/(1.-m*m+x*x);"
   "return f*f*(1./y);"
 "}"
 "float d(float v,float y,float f)"
 "{"
   "float u=v*v;"
   "return.5/(f*sqrt(max(0.,y*y*(1.-u)+u))+y*sqrt(max(0.,f*f*(1.-u)+u)));"
 "}"
 "vec3 e(vec3 v,float u)"
 "{"
   "return v+(1.-v)*r(1.-u);"
 "}"
 "float h(float v,float u)"
 "{"
   "return 1.+(v-1.)*r(1.-u);"
 "}"
 "float d(float v,float m,float f,float x)"
 "{"
   "float u=.5+2.*v*x*x;"
   "return h(f,u)*h(m,u)*(1./y);"
 "}"
 "vec3 e(X v,vec3 f,vec3 u,vec3 m)"
 "{"
   "vec3 x=v.albedo;"
   "float y=v.metallic,c=v.roughness,r=c*c;"
   "r=max(r,.001);"
   "vec3 i=normalize(f+u);"
   "float o=clamp(dot(m,u),0.,1.)+1e-5,z=clamp(dot(m,f),0.,1.),a=clamp(dot(f,i),0.,1.),s=d(r,clamp(dot(m,i),0.,1.)),l=d(r,o,z);"
   "vec3 g=x*(1.-y)*d(r,o,z,a);"
   "return(s*l*e(.04*(1.-y)+x*y,a)+g)*z;"
 "}"
 "float h(float v,float u,float f)"
 "{"
   "return max(f,min(v,u))-length(max(vec2(f-v,f-u),vec2(0)));"
 "}"
 "float l(float v,float u,float f)"
 "{"
   "return min(-f,max(v,-u))+length(max(vec2(f+v,f-u),vec2(0)));"
 "}"
 "float l(vec3 v,vec3 u)"
 "{"
   "vec3 f=abs(v)-u*.5;"
   "return min(max(f.x,max(f.y,f.z)),0.)+length(max(f,0.));"
 "}"
 "float p(vec3 v,float f,float u)"
 "{"
   "return length(v-vec3(0,clamp(v.y,0.,f),0))-u;"
 "}"
 "const vec2 u=vec2(5.7,4)*.5;"
 "vec2 w(inout vec3 v)"
 "{"
   "vec2 f=floor(v.xy/u)*u+u*.5;"
   "v.xy=mod(v.xy,u)-.5*u;"
   "return f;"
 "}"
 "float b(vec3 v)"
 "{"
   "vec3 f=v;"
   "vec2 m=w(v);"
   "vec3 i=h(vec3(m,0));"
   "float r,o;"
   "vec3 a;"
   "bool s=fract(.5*m.x/u.x)<.5;"
   "float n=float(!s)*1e9,C=float(s)*1e9;"
   "a=abs(fract(f*10.)-.5);"
   "float g=dot(vec3(1),smoothstep(.04,.02,a))/3.*.002;"
   "const float b=u.x*.2;"
   "float A=min(max((v.x--u.x*.5-b)/(u.x*.5-b--u.x*.5-b),0.),1.)*u.y+u.y*.25,d=v.y-A,D=min(min(max((min(abs(d),abs(d+u.y))-u.y*.25)*(b*2./sqrt(u.y*u.y+b*b*4.)),-v.z),-v.z+3.),max(abs(v.x)-u.x*.5+b,-v.z+.5));"
   "D+=g*.5;"
   "a=v-vec3(-u.x*.45,0,-.07);"
   "a.x=abs(a.x-.1)-.1;"
   "D=min(D,length(a.xz)-.07);"
   "a.y=abs(fract(a.y)-.5)-.06;"
   "D=min(D,p((a-vec3(-.11,0,0)).yxz,.04,.01));"
   "vec2 t=abs(vec2(length(a.xz),a.y))-vec2(.08,.02);"
   "D=min(D,min(max(t.x,t.y),0.)+length(max(t,0.)));"
   "D+=n;"
   "float B=-v.z;"
   "B=l(B,l(v,vec3(u-.2,4)),.01);"
   "a=v-vec3(0,0,.75);"
   "a.x=abs(a.x);"
   "const vec2 E=u-.2;"
   "B=h(B,l(a,vec3(E,.05)),.01);"
   "const vec3 F=vec3(E.x*.25-.125,E.y*.75,.1);"
   "B=l(B,l(a-vec3(F.x*.5+.05,-F.y*.1,0),F),.01);"
   "const vec3 G=vec3(F.x,F.y*.5,F.z);"
   "B=l(B,l(a-vec3(G.x*1.5+.15,G.y*.3,0),G),.01);"
   "B=min(B,-.01+l(v-vec3(0,-u.y*.25,.1),vec3(u.x-.2,u.y*.3,.025)));"
   "a=v-vec3(0,-u.y*.25,.1);"
   "a.x=a.x-.2*clamp(round(a.x/.2),-6,6);"
   "B=l(B,l(a,vec3(.06,u.y*.25,.05)),.01);"
   "B=min(B,-.01+l(v-vec3(0,-u.y*.1-.025,0),vec3(u.x-.2,.05,.2)));"
   "r=-.01+l(v-vec3(1.1,-.77,-.02),vec3(.4,.28,.1));"
   "a=v-vec3(1.1,-.77,-.02)-vec3(-.06,0,-.1);"
   "r=l(r,p(a.xzy,.1,.1),.005);"
   "a.z-=.05;"
   "r=min(r,-.002+p(a.xzy,.02,.02));"
   "a.xy=e(a.xy);"
   "r=h(r,p(a,.1,.002),.005);"
   "B=min(B,r);"
   "B+=C;"
   "float H=min(B,D),I=smoothstep(0.,1.5,.9-v.y);"
   "vec3 J=v;"
   "J.x*=mix(1.1,1.,I);"
   "float K=i.x*z,L=x*.5+K,M=cos(K+J.x*y*7.+.5*y*cos(J.x*7.))*.05+cos(J.x*2.+L*2.+.5*y*cos(L))*.05;"
   "J-=vec3(0,0,1.+M*I);"
   "r=l(J,vec3(u-.4,.01))*.5-.01;"
   "r+=C;"
   "c=r<H?"
     "1:"
     "0;"
   "H=min(H,r);"
   "o=length(v-vec3(sign(i.x-.5),-.09,0))-.1;"
   "o+=C;"
   "r=length(v-vec3(-u*.5+.1,2.9))-.1;"
   "r+=n;"
   "r=min(r,o);"
   "c=r<H?"
     "2:"
     "c;"
   "return min(H,r);"
 "}"
 "vec2 b(vec3 v,vec3 m,out vec3 f)"
 "{"
   "float r=1.,a=1e2,x,c=0.;"
   "for(int i=0;i<256;i++)"
     "{"
       "f=m+v*c;"
       "float o;"
       "if(e(90.,105.,o))"
         "f.z=abs(f.z)-2.;"
       "if(e(105.,120.,o))"
         "f.xz=vec2((atan(f.z,f.x)+y)/z*u.x*8.,length(f.xz)),f.z-=4.;"
       "x=b(f);"
       "float s=x*x/(2.*a),B=sqrt(x*x-s*s);"
       "r=min(r,B/(.02*max(0.,c-s)));"
       "a=x;"
       "vec2 d=(floor((f.xy+sign(v.xy)*u)/u)+.5)*u,D=abs(d-f.xy)-.5*u;"
       "D=max(D,0.)/abs(v.xy)+.001+float(f.z<-2.)*1e2;"
       "x=min(x,min(D.x,D.y));"
       "c+=x;"
       "if(x<.001)"
         "return vec2(1,.1);"
       "if(c>1e2)"
         "return vec2(0,max(r,.1));"
     "}"
   "return vec2(0,max(r,.1));"
 "}"
 "X b(vec3 v,inout vec3 f)"
 "{"
   "X u=X(0.,vec3(1),.5,.5);"
   "vec3 m=sign(f)*abs(f);"
   "m/=dot(vec3(1),m);"
   "vec2 x=m.x*v.zy+m.y*v.xz+m.z*v.xy,y=w(v);"
   "vec3 i=h(vec3(.1,y));"
   "if(c==0)"
     "{"
       "vec3 r=l(x*3.*vec2(3,1)),B=l(x*96.*vec2(2,1));"
       "u.albedo=vec3(clamp(1.3*mix(.6,1.,r.y)*mix(.8,1.,pow(B.x,3.)),0.,1.));"
       "u.roughness=mix(.5,1.,pow(r.y,3.));"
       "u.metallic=.01;"
       "f=normalize(f+(r*2.-1.)*.05);"
     "}"
   "else if(c==1)"
     "{"
       "float n=i.x;"
       "u.albedo=n<.7?"
         "vec3(.8,.7,.6):"
         "n<.8?"
           "vec3(.8,.2,.2):"
           "n<.9?"
             "vec3(.8,.6,.3):"
             "vec3(.5,.7,.8);"
       "u.roughness=.99;"
       "u.metallic=.01;"
     "}"
   "else"
     " u.type=1.,u.albedo=(step(i.y,.9)*.8+.2)*mix(s,a,i.x);"
   "return u;"
 "}"
 "const vec3 g=normalize(vec3(1,1,-1));"
 "vec3 B(vec3 v)"
 "{"
   "vec2 f=vec2(atan(v.x,-v.z),acos(v.y)*2.)/z*20.+vec2(.05,.01)*x;"
   "vec3 m=vec3(mix(.1,.5,l(f).x)),r=mix(vec3(.01),m,clamp((v.y+.5)*.5,0.,1.));"
   "float u=clamp(dot(v,g),0.,1.);"
   "u=smoothstep(.8,1.,u);"
   "r*=mix(1.,3.,u);"
   "r=mix(r,vec3(1),pow(min(max((u*u-.995)/.005,0.),1.),5.));"
   "r*=min(max((v.y-1.)/-.1,0.),1.);"
   "return r;"
 "}"
 "vec3 B(X v,vec3 f,vec3 m,vec3 x)"
 "{"
   "vec3 r=vec3(0);"
   "vec2 i=w(f);"
   "vec3 B=h(vec3(.1,i)),y=(fract(.5*i.x/u.x)<.5?"
     "vec3(-u*.5+.1,2.9):"
     "vec3(sign(B.x-.5),-.06,0))-f;"
   "float c=length(y);"
   "y/=c;"
   "r+=(step(B.y,.9)*.8+.2)*mix(s,a,B.x)*pow(1./(1.+max(0.,c)),2.)*e(v,y,m,x);"
   "return r;"
 "}"
 "vec3 B(inout vec3 v,vec3 f,vec3 m)"
 "{"
   "X u=b(v,m);"
   "v+=m*.001*2.;"
   "vec3 x;"
   "vec2 i=b(g,v,x);"
   "vec3 r=vec3(0);"
   "r+=i.y*e(u,g,f,m)*a;"
   "r+=B(u,v,f,m);"
   "r*=sqrt(clamp(b(v+m*.05)/.05,0.,1.));"
   "return mix(r,u.albedo,u.type);"
 "}"
 "const vec2 A=gl_FragCoord.xy,C=i.xy,D=C/min(C.x,C.y);"
 "vec2 E=vec2(.5);"
 "void b(out vec3 v,out vec3 f,out vec3 r,vec2 m)"
 "{"
   "float i=60.,a=0.;"
   "v=vec3(1);"
   "r=vec3(0,0,1);"
   "float c=0.;"
   "if(e(0.,15.,c))"
     "v=vec3(.2,.2,mix(2.2,1.5,c)),r=normalize(mix(vec3(.5,1.5,1),vec3(.1,.1,1),c));"
   "else if(e(15.,30.,c))"
     "i=mix(60.,90.,c),a=mix(0.,.4,c),v=mix(vec3(.4,.2,2),vec3(.35,.6,.4),c),r=normalize(mix(vec3(-.5,-1,-1),vec3(0,0,-1),c));"
   "else if(e(30.,45.,c))"
     "v=vec3(mix(.8-u.x,-.1,c),-1,0),r=normalize(vec3(-1,-.1,.3));"
   "else if(e(45.,60.,c))"
     "v=vec3(mix(-.5,.2-u.x,c),-1.8,-.3),r=normalize(vec3(1,.2,.8));"
   "else if(e(60.,75.,c))"
     "{"
       "float s=floor(c*3.)*8.+fract(c*3.);"
       "v=vec3(0,0,-1.-s);"
       "r=vec3(0,0,1);"
     "}"
   "else if(e(77.,90.,c))"
     "{"
       "float B=20.*c;"
       "vec3 s=vec3(-u.x*.5+.3,B*u.y,0);"
       "v=s+vec3(mix(3,-3,c),-5,-3);"
       "r=normalize(s-v);"
     "}"
   "else if(e(90.,105.,c))"
     "v=vec3(-x*4.,0,0),r=normalize(vec3(-1,mix(.2,-.2,c),0));"
   "else if(e(105.,120.,c))"
     "v=vec3(0,x*2.,0),r=normalize(vec3(0,1,mix(0.,1.,c))),r.xz*=p(y*c);"
   "vec3 n=(l(vec2(-4.2,x*.1))*2.-1.)*.05;"
   "v+=n;"
   "vec3 B=vec3(0,1,0),s=normalize(cross(B,r));"
   "B=normalize(cross(r,s));"
   "mat3 d=mat3(s,B,r);"
   "float o=1./tan(i*y/360.);"
   "o-=o*length(m)*a;"
   "f=normalize(d*vec3(m,o));"
 "}"
 "vec4 B(vec3 v,vec3 u)"
 "{"
   "vec3 f;"
   "if(b(v,u,f).x<.5)"
     "return vec4(B(v),100);"
   "float m=length(f-u);"
   "const vec2 r=vec2(1,-1);"
   "int i=c;"
   "vec3 x=normalize(r.xyy*b(f+r.xyy*.001)+r.yyx*b(f+r.yyx*.001)+r.yxy*b(f+r.yxy*.001)+r.xxx*b(f+r.xxx*.001));"
   "c=i;"
   "vec3 a=B(f,-v,x);"
   "return vec4(a,m);"
 "}"
 "vec3 F(vec3 v)"
 "{"
   "return v*(2.51*v+.03)/(v*(2.43*v+.59)+.14);"
 "}"
 "vec3 F(vec3 v,vec3 f)"
 "{"
   "v+=h(f)*.05;"
   "v=pow(v,vec3(.8));"
   "v=F(v);"
   "v.x=smoothstep(-.025,1.025,v.x);"
   "float u=0.;"
   "if(e(0.,10.,u))"
     "v*=u*u;"
   "else if(e(14.,16.,u))"
     "v*=2.*abs(u-.5);"
   "else if(e(29.,31.,u))"
     "v*=2.*abs(u-.5);"
   "else if(e(44.,46.,u))"
     "v*=2.*abs(u-.5);"
   "else if(e(59.,61.,u))"
     "v*=2.*abs(u-.5);"
   "else if(e(74.,77.,u))"
     "v*=clamp(75.-x,0.,1.);"
   "else if(e(119.,120.,u))"
     "v*=1.-u;"
   "else if(x>=120.)"
     "v*=0.;"
   "return v;"
 "}"
 "void main()"
 "{"
   "x=n;"
   "vec2 u=A/C;"
   "u+=(h(vec3(A,x)).xy-.5)*.25/C;"
   "vec2 c=(u-.5)*2.*D;"
   "vec3 m,r,y;"
   "b(m,r,y,c);"
   "vec4 a=B(r,m);"
   "a.xyz=F(a.xyz,vec3(-x,4.2*u));"
   "vec4 i=texture(v,u);"
   "f=mix(a,i,.5);"
 "}" 
#endif

