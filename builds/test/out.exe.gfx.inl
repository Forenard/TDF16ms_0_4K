// Generated with Shader Minifier 1.3.6 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADER_MINIFIER_IMPL
#ifndef SHADER_MINIFIER_HEADER
# define SHADER_MINIFIER_HEADER
# define VAR_backBuffer0 "v"
# define VAR_backBuffer1 "m"
# define VAR_backBuffer2 "i"
# define VAR_backBuffer3 "u"
# define VAR_outColor0 "f"
# define VAR_outColor1 "r"
# define VAR_outColor2 "o"
# define VAR_outColor3 "s"
# define VAR_waveOutPosition "a"
#endif
#else // if SHADER_MINIFIER_IMPL
// graphics_fragment_shader.i
"#version 430\n"
 "layout(binding=0) uniform sampler2D v;"
 "layout(binding=1) uniform sampler2D m;"
 "layout(binding=2) uniform sampler2D i;"
 "layout(binding=3) uniform sampler2D u;"
 "layout(location=0) uniform int a;"
 "vec2 n=vec2(1920,1080);"
 "float c=a/4.8e4;"
 "layout(location=0) out vec4 f;"
 "layout(location=1) out vec4 r;"
 "layout(location=2) out vec4 o;"
 "layout(location=3) out vec4 s;"
 "float x;"
 "int e;"
 "const float y=acos(-1.),z=2.*y,l=y*(3.-sqrt(5.));"
 "const vec3 d=vec3(255,137,14)/255.,p=vec3(191,211,255)/255.;"
 "mat2 t(float v)"
 "{"
   "float m=cos(v),D=sin(v);"
   "return mat2(m,-D,D,m);"
 "}"
 "vec2 h(float v)"
 "{"
   "return vec2(cos(v),sin(v));"
 "}"
 "vec2 w(vec2 v)"
 "{"
   "float f=atan(v.y,v.x)+z-y*.5+y/32.;"
   "f=mod(f,z/32.)+y*.5-y/32.;"
   "return h(f)*length(v);"
 "}"
 "vec2 h(vec3 v,vec3 f)"
 "{"
   "f=sign(f)*pow(abs(f),vec3(1));"
   "f/=dot(vec3(1),f);"
   "return f.x*v.zy+f.y*v.xz+f.z*v.xy;"
 "}"
 "mat3 M(vec3 v)"
 "{"
   "v=normalize(v);"
   "vec3 f=vec3(0,1,0),x=normalize(cross(f,v));"
   "f=normalize(cross(v,x));"
   "return mat3(x,f,v);"
 "}"
 "bool M(float v,float m,out float f)"
 "{"
   "f=(x-v)/(m-v);"
   "return 0.<=f&&f<1.;"
 "}"
 "uvec3 g(uvec3 v)"
 "{"
   "v=v*1664525u+1013904223u;"
   "v.x+=v.y*v.z;"
   "v.y+=v.z*v.x;"
   "v.z+=v.x*v.y;"
   "v^=v>>16u;"
   "v.x+=v.y*v.z;"
   "v.y+=v.z*v.x;"
   "v.z+=v.x*v.y;"
   "return v;"
 "}"
 "vec3 b(vec3 v)"
 "{"
   "uvec3 m=g(floatBitsToUint(v));"
   "return vec3(m)/float(4294967295u);"
 "}"
 "vec3 B(vec2 v)"
 "{"
   "vec2 m=floor(v),D=fract(v);"
   "D=D*D*(3.-2.*D);"
   "vec3 f=mix(b(vec3(m,.12)),b(vec3(m+vec2(1,0),.12)),D.x),x=mix(b(vec3(m+vec2(0,1),.12)),b(vec3(m+vec2(1),.12)),D.x);"
   "return mix(f,x,D.y);"
 "}"
 "vec3 A(vec2 v)"
 "{"
   "const mat2 m=t(l)*2.;"
   "float x=1.;"
   "vec4 D=vec4(0);"
   "for(int f=0;f<6;f++)"
     "D+=x*vec4(B(v),1),x*=.5,v*=m;"
   "return D.xyz/D.w;"
 "}struct Material{int type;vec3 albedo;float metallic;float roughness;};"
 "float C(float v)"
 "{"
   "return v*v*(v*v)*v;"
 "}"
 "float A(float v,float x)"
 "{"
   "float f=x*v,D=v/(1.-x*x+f*f);"
   "return D*D*(1./y);"
 "}"
 "float A(float v,float x,float m)"
 "{"
   "float f=v*v;"
   "return.5/(m*sqrt(max(0.,x*x*(1.-f)+f))+x*sqrt(max(0.,m*m*(1.-f)+f)));"
 "}"
 "vec3 B(vec3 v,float f)"
 "{"
   "return v+(1.-v)*C(1.-f);"
 "}"
 "float C(float v,float f)"
 "{"
   "return 1.+(v-1.)*C(1.-f);"
 "}"
 "float A(float x,float v,float m,float f)"
 "{"
   "float D=.5+2.*x*f*f;"
   "return C(m,D)*C(v,D)*(1./y);"
 "}"
 "vec3 B(Material v,vec3 f,vec3 x,vec3 m)"
 "{"
   "vec3 y=v.albedo;"
   "float D=v.metallic,n=v.roughness,e=n*n;"
   "e=max(e,.001);"
   "vec3 i=normalize(f+x);"
   "float o=clamp(dot(m,x),0.,1.)+1e-5,z=clamp(dot(m,f),0.,1.),c=clamp(dot(f,i),0.,1.),b=A(e,clamp(dot(m,i),0.,1.)),p=A(e,o,z);"
   "vec3 s=y*(1.-D)*A(e,o,z,c);"
   "return(b*p*B(.04*(1.-D)+y*D,c)+s)*z;"
 "}"
 "float B(float v,float f,float m)"
 "{"
   "return max(m,min(v,f))-length(max(vec2(m-v,m-f),vec2(0)));"
 "}"
 "float C(float v,float f,float m)"
 "{"
   "return min(-m,max(v,f))+length(max(vec2(m+v,m+f),vec2(0)));"
 "}"
 "float b(float v,float m,float f)"
 "{"
   "return C(v,-m,f);"
 "}"
 "float M(vec3 v,vec3 x)"
 "{"
   "vec3 D=abs(v)-x*.5;"
   "return min(max(D.x,max(D.y,D.z)),0.)+length(max(D,0.));"
 "}"
 "float b(vec3 v,float x)"
 "{"
   "v.y-=clamp(v.y,-x*.5,x*.5);"
   "return length(v)-.02;"
 "}"
 "float g(vec3 v,float f,float m)"
 "{"
   "vec2 D=abs(vec2(length(v.xz),v.y))-vec2(m,f);"
   "return min(max(D.x,D.y),0.)+length(max(D,0.));"
 "}"
 "const vec2 D=vec2(5.7,4)*.5;"
 "vec2 E(inout vec3 v)"
 "{"
   "vec2 f=floor(v.xy/D)*D+D*.5;"
   "v.xy=mod(v.xy,D)-.5*D;"
   "return f;"
 "}"
 "float F(vec3 v)"
 "{"
   "vec2 m=E(v);"
   "if(mod(m.x,D.x*2.)<D.x)"
     "return 1e2;"
   "float f=-v.z;"
   "f=b(f,M(v,vec3(D-.2,4)),.01);"
   "vec3 x=v-vec3(0,0,.75);"
   "x.x=abs(x.x);"
   "vec2 i=D-.2;"
   "f=B(f,M(x,vec3(i,.05)),.01);"
   "vec3 e=vec3(i.x*.25-.125,i.y*.75,.1);"
   "f=b(f,M(x-vec3(e.x*.5+.05,-e.y*.1,0),e),.01);"
   "e.y*=.5;"
   "f=b(f,M(x-vec3(e.x*1.5+.15,e.y*.3,0),e),.01);"
   "f=min(f,-.01+M(v-vec3(0,-D.y*.25,.1),vec3(D.x-.2,D.y*.3,.025)));"
   "vec3 r=v-vec3(0,-D.y*.25,.1);"
   "r.x=r.x-.2*clamp(round(r.x/.2),-12,12);"
   "f=b(f,M(r,vec3(.06,D.y*.25,.05)),.01);"
   "f=min(f,-.01+M(v-vec3(0,-D.y*.1-.025,0),vec3(D.x-.2,.05,.2)));"
   "return min(f,-.01+M(v-vec3(0,-.5*(D.y-.2)-.05,0),vec3(D.x,.05,.15)));"
 "}"
 "float G(vec3 v)"
 "{"
   "vec2 f=E(v);"
   "vec3 m=b(vec3(f,0));"
   "if(mod(f.x,D.x*2.)<D.x)"
     "return 1e2;"
   "float i=smoothstep(0.,1.5,.9-v.y);"
   "vec3 e=v;"
   "e.x*=mix(1.1,1.,i);"
   "float s=m.x*z,c=x*.5+s,o=cos(s+e.x*y*7.+.5*y*cos(e.x*7.))*.05+cos(e.x*2.+c*2.+.5*y*cos(c))*.05;"
   "e-=vec3(0,0,1.+o*i);"
   "return M(e,vec3(D-.4,.01))*.5-.01;"
 "}"
 "float H(vec3 v)"
 "{"
   "vec2 f=E(v);"
   "if(mod(f.x,D.x*2.)<D.x)"
     "return v-=vec3(-D.x*.45,0,-.07),v.x=abs(v.x-.1)-.1,g(v,D.y*.51,.07);"
   "v-=vec3(1.1,-.77,-.02);"
   "vec3 m=v;"
   "float e=-.01+M(m,vec3(.4,.28,.1));"
   "vec3 x=m-vec3(-.06,0,-.1);"
   "e=b(e,g(x.xzy,.1,.1),.005);"
   "x.z-=.05;"
   "e=min(e,-.002+g(x.xzy,.02,.02));"
   "x.xy=w(x.xy);"
   "return B(e,g(x,.1,.002),.005);"
 "}"
 "float I(vec3 v)"
 "{"
   "vec2 f=E(v);"
   "vec3 m=b(vec3(f,0));"
   "if(mod(f.x,D.x*2.)<D.x)"
     "{"
       "v-=vec3(-D.x*.45,0,-.07);"
       "v.x=abs(v.x-.1)-.1;"
       "v.y=mod(v.y,1.)-.5;"
       "v.y=abs(v.y)-.06;"
       "float x=g((v-vec3(-.11,0,0)).yxz,.04,.01);"
       "return min(x,g(v,.02,.08));"
     "}"
   "return g(v-vec3(sign(m.x-.5),-.18,0),.01,.075)-.01;"
 "}"
 "float J(vec3 v)"
 "{"
   "v.y+=D.y*.2;"
   "vec3 f=v;"
   "vec2 m=E(v);"
   "if(mod(m.x,D.x*2.)>D.x)"
     "return 1e2;"
   "f=abs(fract(f*10.)-.5);"
   "float y=clamp(smoothstep(.04,.02,f.x)+smoothstep(.04,.02,f.y),0.,1.)*.002,e=-v.z+3.;"
   "const float i=D.x*.2;"
   "float z=clamp((v.x--D.x*.5-i)/(D.x*.5-i--D.x*.5-i)*D.y,min(0.,D.y),max(0.,D.y));"
   "const vec3 o=vec3(D.x,D.y*.5,3),c=vec3(D.x-.22,D.y*.5,3);"
   "float r=M(v-vec3(0,z-D.y,1.5),o);"
   "r=min(r,M(v-vec3(0,z,1.5),o));"
   "r=b(r,M(v-vec3(0,z-D.y+.11,1.61),c),.01);"
   "r=b(r,M(v-vec3(0,z+.11,1.61),c),.01);"
   "r*=i*2./sqrt(D.y*D.y+i*i*4.);"
   "const float s=i-.13;"
   "float l=-v.z+.5;"
   "l=b(l,M(vec3(abs(v.x),v.yz)-vec3(D.x*.5-i+s*.5,0,0),vec3(s,1e9,6)),.01);"
   "r=min(r,l);"
   "r=min(r,e);"
   "r-=.01;"
   "r+=y*.5*float(x<65.||75.<=x);"
   "return r;"
 "}"
 "float K(vec3 v)"
 "{"
   "vec2 f=E(v);"
   "vec3 m=b(vec3(f,0));"
   "return mod(f.x,D.x*2.)<D.x?"
     "1e2:"
     "length(v-vec3(sign(m.x-.5),-.06,0))-.1;"
 "}"
 "float L(vec3 v)"
 "{"
   "v.y-=D.y*.1;"
   "vec2 f=E(v);"
   "if(mod(f.x,D.x*2.)>D.x)"
     "return 1e2;"
   "vec3 m=v;"
   "m=vec3(abs(m.x)-D.x*.375,m.y+D.y*.365,m.z-2.85);"
   "m.zy*=t(.3);"
   "m.xy*=t(.65);"
   "return b(m,D.x*.2);"
 "}"
 "void E(float v,inout float f,inout int m)"
 "{"
   "if(v<f)"
     "f=v,e=m;"
   "m++;"
 "}"
 "float N(vec3 v)"
 "{"
   "int f=0;"
   "e=-1;"
   "float m=1e2;"
   "E(K(v),m,f);"
   "E(L(v),m,f);"
   "E(F(v),m,f);"
   "E(G(v),m,f);"
   "E(I(v),m,f);"
   "E(H(v),m,f);"
   "E(J(v),m,f);"
   "return m;"
 "}"
 "vec3 O(vec3 v)"
 "{"
   "const vec2 f=vec2(1,-1);"
   "int m=e;"
   "vec3 i=normalize(f.xyy*N(v+f.xyy*.001)+f.yyx*N(v+f.yyx*.001)+f.yxy*N(v+f.yxy*.001)+f.xxx*N(v+f.xxx*.001));"
   "e=m;"
   "return i;"
 "}"
 "vec3 F(vec3 v,vec3 f,vec3 m)"
 "{"
   "vec3 e=abs((floor((v+sign(f)*m)/m)+.5)*m-v)-.5*m;"
   "e=max(e,0.);"
   "e/=abs(f);"
   "return e;"
 "}"
 "vec2 G(vec3 v,vec3 m,out vec3 f)"
 "{"
   "float e=1.,x=1e2,r,i=0.;"
   "for(int c=0;c<256;c++)"
     "{"
       "f=m+v*i;"
       "float o;"
       "if(M(90.,105.,o))"
         "f.z=abs(f.z)-2.;"
       "if(M(105.,120.,o))"
         "f.xz=vec2((atan(f.z,f.x)+y)/z*D.x*8.,length(f.xz)),f.z-=4.;"
       "r=N(f);"
       "float s=r*r/(2.*x),n=sqrt(r*r-s*s);"
       "e=min(e,n/(.02*max(0.,i-s)));"
       "x=r;"
       "vec3 l=F(f,v,vec3(D,1000));"
       "l+=f.z<-2.?"
         "1e9:"
         "0.;"
       "r=min(r,l.x+.001);"
       "r=min(r,l.y+.001);"
       "i+=r;"
       "if(r<.001)"
         "return vec2(1,.1);"
       "if(i>1e2)"
         "return vec2(0,max(e,.1));"
     "}"
   "return vec2(0,max(e,.1));"
 "}"
 "Material E(vec3 v,inout vec3 f)"
 "{"
   "Material D=Material(0,vec3(1),.5,.5);"
   "vec2 m=h(v,f);"
   "vec3 i=A(m*3.*vec2(3,1)),r=A(m*96.*vec2(2,1));"
   "D.albedo=vec3(clamp(1.3*mix(.6,1.,i.y)*mix(.8,1.,pow(r.x,3.)),0.,1.));"
   "D.roughness=mix(.5,1.,pow(i.y,3.));"
   "D.metallic=.01;"
   "f=normalize(f+(i*2.-1.)*.05);"
   "vec2 y=E(v);"
   "if(e==0)"
     "{"
       "D.type=1;"
       "vec3 o=b(vec3(.2,y));"
       "D.albedo=(step(o.y,.9)*.8+.2)*mix(d,p,o.x);"
     "}"
   "else if(e==1)"
     "D.type=1,D.albedo=p*2.*(step(b(vec3(y,floor(x*10.))).x,.95)*.5+.5);"
   "else if(e==3)"
     "{"
       "vec3 n=b(vec3(.2,y));"
       "float c=n.x;"
       "D.albedo=c<.7?"
         "vec3(.8,.7,.6):"
         "c<.8?"
           "vec3(.8,.2,.2):"
           "c<.9?"
             "vec3(.8,.6,.3):"
             "vec3(.5,.7,.8);"
       "D.roughness=.99;"
       "D.metallic=.01;"
     "}"
   "else if(e==4)"
     "D.metallic=.9;"
   "else if(e==5)"
     "D.albedo*=vec3(1.5),D.roughness*=.3,D.metallic=.2;"
   "return D;"
 "}"
 "const vec3 P=normalize(vec3(1,1,-1));"
 "vec3 Q(vec3 v)"
 "{"
   "vec2 f=vec2(atan(v.x,-v.z),acos(v.y)*2.)/z*20.+vec2(.05,.01)*x;"
   "vec3 m=vec3(mix(.1,.5,A(f).x)),e=mix(vec3(.01),m,clamp((v.y+.5)*.5,0.,1.));"
   "float D=clamp(dot(v,P),0.,1.);"
   "D=smoothstep(.8,1.,D);"
   "e*=mix(1.,3.,D);"
   "e=mix(e,vec3(1),pow(min(max((D*D-.995)/.005,0.),1.),5.));"
   "e*=min(max((v.y-1.)/-.1,0.),1.);"
   "return e;"
 "}"
 "vec3 C(Material v,vec3 f,vec3 m,vec3 D)"
 "{"
   "vec3 r=vec3(0);"
   "const vec2 i=vec2(1,-1);"
   "vec3 x=-normalize(i.xyy*K(f+i.xyy*.001)+i.yyx*K(f+i.yyx*.001)+i.yxy*K(f+i.yxy*.001)+i.xxx*K(f+i.xxx*.001));"
   "float y=max(0.,K(f)-1.);"
   "vec3 c=D;"
   "e=0;"
   "Material n=E(f,c);"
   "vec3 o=n.albedo*pow(1./(1.+y),2.);"
   "r+=B(v,x,m,D)*o;"
   "x=-normalize(i.xyy*L(f+i.xyy*.001)+i.yyx*L(f+i.yyx*.001)+i.yxy*L(f+i.yxy*.001)+i.xxx*L(f+i.xxx*.001));"
   "y=max(0.,L(f));"
   "c=D;"
   "e=1;"
   "n=E(f,c);"
   "o=n.albedo*pow(1./(1.+y),2.);"
   "r+=B(v,x,m,D)*o;"
   "return r;"
 "}"
 "vec3 H(inout vec3 v,vec3 f,vec3 m)"
 "{"
   "Material D=E(v,m);"
   "v+=m*.001*2.;"
   "vec3 x;"
   "vec2 i=G(P,v,x);"
   "vec3 e=vec3(0);"
   "e+=B(D,P,f,m)*p*i.y;"
   "e+=C(D,v,f,m);"
   "e*=sqrt(clamp(N(v+m*.05)/.05,0.,1.));"
   "return mix(e,D.albedo,D.type);"
 "}"
 "const vec2 R=gl_FragCoord.xy,S=n.xy,T=S/min(S.x,S.y);"
 "vec2 U=vec2(.5);"
 "void A(out vec3 v,out vec3 f,out vec3 m,out vec2 e,vec2 i)"
 "{"
   "float o=60.,c=0.;"
   "v=vec3(1);"
   "m=vec3(0,0,1);"
   "float r=0.;"
   "x+=30.;"
   "if(M(0.,15.,r))"
     "r=pow(r,.5),v=vec3(.2,-1.5,2.2),m=normalize(mix(vec3(.5,1.5,1),vec3(.1,.2,1),r));"
   "else if(M(15.,30.,r))"
     "r=pow(r,.5),o=mix(60.,90.,r),c=mix(0.,.4,r),v=mix(vec3(.4,-1.5,2),vec3(.35,-.5,.3),r),m=i.x<.5?"
       "(U=vec2(.25,.5),normalize(mix(vec3(-.5,-1,1),vec3(0,-1,1),r))):"
       "(U=vec2(.75,.5),normalize(mix(vec3(-.5,-1,-1),vec3(0,0,-1),r)));"
   "else if(M(30.,45.,r))"
     "v=vec3(mix(.8-D.x,-.1,r),-1,0),m=normalize(vec3(-1,-.1,.3));"
   "else if(M(45.,60.,r))"
     "m=i.x<.5?"
       "(U=vec2(.25,.5),v=vec3(mix(-.5,.2-D.x,r),-1.8,-.3),normalize(vec3(1,.2,.8))):"
       "(U=vec2(.75,.5),o=90.,v=mix(vec3(.4-D.x,-1,.7),vec3(-.2,-1.5,.7),r),normalize(vec3(-D.x*.8,-D.y*.5+.5,-1)-v));"
   "else if(M(60.,75.,r))"
     "{"
       "float s=floor(r*3.)*8.+fract(r*3.);"
       "v=vec3(0,0,-1.-s);"
       "m=vec3(0,0,1);"
     "}"
   "else if(M(77.,90.,r))"
     "{"
       "float n=20.*r;"
       "vec3 s=vec3(-D.x*.5+.3,n*D.y,0);"
       "v=s+vec3(mix(3,-3,r),-5,-3);"
       "m=normalize(s-v);"
     "}"
   "else if(M(90.,105.,r))"
     "v=vec3(-x*4.,0,0),m=normalize(vec3(-1,mix(.2,-.2,r),0));"
   "else if(M(105.,120.,r))"
     "v=vec3(0,x*2.,0),m=normalize(vec3(0,1,mix(0.,1.,r))),m.xz*=t(y*r);"
   "e=(i-U)*2.*T;"
   "vec3 n=(A(vec2(-4.2,x*.1))*2.-1.)*.05;"
   "v+=n;"
   "mat3 s=M(m);"
   "float z=1./tan(o*y/360.);"
   "z-=z*length(e)*c;"
   "vec3 l,p,b,a;"
   "l=normalize(s*vec3(e,z));"
   "p=v;"
   "b=m;"
   "a+=s*vec3(e*2.5,0)+v;"
   "f=normalize(mix(b,l,1.));"
   "v=mix(a,p,1.);"
 "}"
 "vec4 F(vec3 v,vec3 f)"
 "{"
   "vec3 m;"
   "if(G(v,f,m).x<.5)"
     "return vec4(Q(v),100);"
   "float D=length(m-f);"
   "vec3 x=O(m),e=H(m,-v,x);"
   "return vec4(e,D);"
 "}"
 "float G(float v,float f)"
 "{"
   "return abs(min(1.,f*f)*.3*(f-v)/(abs(v*(f-.3))+1e-9))*10.;"
 "}"
 "vec3 V(vec3 v)"
 "{"
   "return v*(2.51*v+.03)/(v*(2.43*v+.59)+.14);"
 "}"
 "vec3 H(vec3 v,vec3 f)"
 "{"
   "v+=b(f)*.05;"
   "v=pow(v,vec3(.8));"
   "v=V(v);"
   "v.x=smoothstep(-.025,1.025,v.x);"
   "float m=0.;"
   "if(M(0.,10.,m))"
     "v*=m*m;"
   "else if(M(14.,16.,m))"
     "v*=2.*abs(m-.5);"
   "else if(M(29.,31.,m))"
     "v*=2.*abs(m-.5);"
   "else if(M(44.,46.,m))"
     "v*=2.*abs(m-.5);"
   "else if(M(59.,61.,m))"
     "v*=2.*abs(m-.5);"
   "else if(M(74.,77.,m))"
     "v*=clamp(75.-x,0.,1.);"
   "else if(M(119.,120.,m))"
     "v*=1.-m;"
   "else if(x>=120.)"
     "v*=0.;"
   "return v;"
 "}"
 "void main()"
 "{"
   "x=c;"
   "vec2 D=R/S;"
   "D+=(b(vec3(R,x)).xy-.5)*.25/S;"
   "vec2 i;"
   "vec3 e,o,z;"
   "A(e,o,z,i,D);"
   "vec4 y=F(o,e);"
   "y.xyz=H(y.xyz,vec3(-x,4.2*D));"
   "r=max(vec4(0),y);"
   "vec4 s=vec4(0);"
   "float p=textureLod(m,U,3.).w;"
   "vec4 a=texture(m,D);"
   "float d=G(a.w,p);"
   "const float u=sqrt(float(64));"
   "for(int M=0;M<64;M++)"
     "{"
       "float g=float(M);"
       "vec2 P=D+h(g*l)*(d*sqrt(g)/u)/n;"
       "vec4 t=texture(m,P);"
       "float B=t.w;"
       "if(B>0.)"
         "{"
           "float K=G(B,p);"
           "s+=vec4(t.xyz,1)*max(.001,K);"
         "}"
     "}"
   "s.xyz/=s.w;"
   "vec4 P=texture(v,D);"
   "vec3 M=mix(s.xyz,P.xyz,.5);"
   "M=max(vec3(0),M);"
   "f=vec4(M,1);"
 "}" 
#endif

