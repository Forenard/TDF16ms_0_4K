// Generated with Shader Minifier 1.3.6 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADER_MINIFIER_IMPL
#ifndef SHADER_MINIFIER_HEADER
# define SHADER_MINIFIER_HEADER
# define VAR_backBuffer0 "v"
# define VAR_outColor0 "i"
# define VAR_waveOutPosition "m"
#endif
#else // if SHADER_MINIFIER_IMPL
// graphics_fragment_shader.i
"#version 430\n"
 "layout(binding=0) uniform sampler2D v;"
 "layout(location=0) uniform int m;"
 "vec2 f=vec2(1920,1080);"
 "float n=m/4.8e4;"
 "layout(location=0) out vec4 i;"
 "float y;"
 "int c;"
 "const float x=acos(-1.);"
 "const vec3 a=vec3(1,.5,.1),s=vec3(.8,.8,.9);"
 "vec3 t(vec3 v)"
 "{"
   "uvec3 f=floatBitsToUint(v);"
   "f=(f>>8U^f.yzx)*1103515245u;"
   "f=(f>>8U^f.yzx)*1103515245u;"
   "f=(f>>8U^f.yzx)*1103515245u;"
   "return vec3(f)/-1u;"
 "}"
 "vec3 p(vec2 v)"
 "{"
   "vec2 f=floor(v),m=fract(v);"
   "m=m*m*(3.-2.*m);"
   "vec3 c=mix(t(vec3(f,.12)),t(vec3(f+vec2(1,0),.12)),m.x),y=mix(t(vec3(f+vec2(0,1),.12)),t(vec3(f+vec2(1),.12)),m.x);"
   "return mix(c,y,m.y);"
 "}"
 "vec3 h(vec2 v)"
 "{"
   "float m=1.;"
   "vec4 f=vec4(0);"
   "for(int c=0;c<6;c++)"
     "f+=m*vec4(p(v),1),m*=.8,v*=mat2(-1.4747,1.351,-1.351,-1.4747);"
   "return f.xyz/f.w;"
 "}"
 "float r(float v)"
 "{"
   "return v*v*(v*v)*v;"
 "}"
 "vec3 h(vec3 v,float y,float m,vec3 f,vec3 z,vec3 c)"
 "{"
   "float l=m*m;"
   "l=max(l,.001);"
   "vec3 a=.04*(1.-y)+v*y,s=normalize(f+z);"
   "float d=clamp(dot(c,z),0.,1.)+1e-5,t=clamp(dot(c,f),0.,1.),n=clamp(dot(c,s),0.,1.),u=clamp(dot(f,s),0.,1.),o=n*l,i=l/(1.-n*n+o*o),e=l*l,b=.5+2.*l*u*u;"
   "return(i*i/x*(.5/(t*sqrt(max(0.,d*d*(1.-e)+e))+d*sqrt(max(0.,t*t*(1.-e)+e))))*(a+(1.-a)*r(1.-u))+v*(1.-y)*((1.+(b-1.)*r(1.-t))*(1.+(b-1.)*r(1.-d))/x))*t;"
 "}"
 "float h(vec3 v,vec3 x)"
 "{"
   "vec3 f=abs(v)-x*.5;"
   "return min(max(f.x,max(f.y,f.z)),0.)+length(max(f,0.));"
 "}"
 "vec2 l;"
 "float d(vec3 v)"
 "{"
   "l=floor(v.xy/vec2(3,2))*vec2(3,2)+vec2(1.5,1);"
   "vec3 f=v;"
   "v.xy-=l;"
   "vec3 m=t(vec3(l,1));"
   "float z,s;"
   "vec3 i;"
   "bool a=fract(.5*l.x/3.)<.5;"
   "i=abs(fract(f*10)-.5);"
   "float n=min(dot(vec3(1),smoothstep(.02,0.,i)),1)*.001,d=v.y-clamp((v.x+1)*.5,0.,1.)*2-.5,r=min(min(max((min(abs(d),abs(d+2))-.5)*.4,-v.z),-v.z+3),max(abs(v.x)-1,-v.z+.5));"
   "r+=n;"
   "i=v-vec3(-1.35,0,-.07);"
   "i.x=abs(i.x-.1)-.1;"
   "r=min(r,length(i.xz)-.07);"
   "i.y=abs(fract(i.y)-.5)-.07;"
   "r=min(r,h(i+vec3(.1,0,0),vec3(.05,0,0))-.01);"
   "vec2 b=abs(vec2(length(i.xz),i.y))-vec2(.08,.02);"
   "r=min(r,min(max(b.x,b.y),0.)+length(max(b,0.)));"
   "float u=-v.z-.11;"
   "u=max(u,-h(v,vec3(2.8,1.8,4)));"
   "i=v;"
   "i.z-=.75;"
   "i.x=abs(abs(i.x)-.4);"
   "u=min(u,h(i,vec3(3,2,.05)));"
   "u=max(u,-h(i-vec3(.4,-.135,0),vec3(.7,1.35,.1)));"
   "u=min(u,h(v-vec3(0,-.5,.1),vec3(2.8,.6,.025))-.01);"
   "i=v-vec3(.2*clamp(round(v.x/.2),-6,6),-.5,.1);"
   "u=max(u,-h(i,vec3(.1,.5,.05)));"
   "u=min(u,h(v+vec3(0,.225,0),vec3(2.8,.05,.2))-.01);"
   "i=v-vec3(1.15,-.76,0);"
   "z=h(i,vec3(.4,.3,.15)-.02);"
   "i-=vec3(-.06,0,-.11);"
   "z=max(z,-h(i,vec3(0,0,.1))+.1);"
   "i.z-=.05;"
   "i.y-=.01*clamp(round(i.y/.01),-9,9);"
   "z=min(z,h(i,vec3(.2,0,0))-.002);"
   "u=min(u,z);"
   "float e=a?"
     "r:"
     "u,o=smoothstep(0.,2.,1.-v.y);"
   "vec3 p=v;"
   "p.x*=mix(1.2,1.,o);"
   "float g=y+m.x*x*2.,B=cos(p.x*25.+cos(p.x*8.))+cos(p.x*4.+g+.5*cos(g));"
   "p.z-=1.+.05*B*o;"
   "z=h(p,vec3(2.6,1.6,.01))*.5-.01;"
   "z+=float(a)*1e9;"
   "c=z<e?"
     "1:"
     "0;"
   "e=min(e,z);"
   "s=length(v-vec3(sign(m.x-.5),-.09,0))-.1;"
   "z=length(v-vec3(-1.4,-.9,2.9))-.1;"
   "z=a?"
     "z:"
     "s;"
   "c=z<e?"
     "2:"
     "c;"
   "return min(e,z);"
 "}"
 "vec2 d(vec3 v,vec3 m,out vec3 f,out vec3 z)"
 "{"
   "float i=1.,c,u=0.,l;"
   "for(int r=0;r<256;r++)"
     "{"
       "z=f=m+v*u;"
       "float a=mod(atan(f.y,f.z)+floor(f.x/3.)*.1,x*2./3.)-x/3.;"
       "f.zy=105.<=y&&y<120.?"
         "vec2(cos(a),sin(a))*length(f.zy)-5.:"
         "f.zy;"
       "f.xz=120.<=y&&y<135.?"
         "vec2((atan(f.z,f.x)+x)/x*24,length(f.xz)-8.):"
         "f.xz;"
       "float e=y/.1171875/32+.125+floor(f.x/6)/4;"
       "f.y+=4.*(floor(e)-pow(1./(1.+fract(e)*8),5.))*sign(fract(-f.x/12)-.5)*float(90.<=y&&y<135.);"
       "f.z-=cos(length((floor(f.xy/vec2(3,2))+.5)*vec2(1.5,1))+y)*max(0,(y-105.)/30.);"
       "c=d(f);"
       "i=max(min(i,exp2(2+2*t(vec3(f)).x)*c/u),.15);"
       "vec2 b=floor(f.xy/vec2(3,2)+sign(v.xy))*vec2(3,2)+vec2(1.5,1),s=abs(b-f.xy)-vec2(1.5,1);"
       "s=max(s,0.)/abs(v.xy)+.001+step(f.z,-40)*30.;"
       "float p=min(s.x,s.y);"
       "c=min(p,c);"
       "u+=c;"
       "l=exp(-u*.04);"
       "if(c<.001)"
         "return vec2(l,.15);"
       "if(u>30.+step(105,y)*1000)"
         "return vec2(0,i);"
     "}"
   "return vec2(l,i);"
 "}"
 "const vec3 z=normalize(vec3(1.5,1.5,-1));"
 "void main()"
 "{"
   "y=n;"
   "const vec2 m=gl_FragCoord.xy,u=f.xy,b=m/u;"
   "const vec3 x=t(vec3(m,y));"
   "vec3 r,e,p;"
   "float g=y/15;"
   "int o=int(g)%10;"
   "float B=fract(g)*step(g,10),C=o==5?"
     "(floor(B*4)+B)*.25:"
     "B;"
   "r=mix(vec3[](vec3(.2,.2,2.2),vec3(.4,.2,2),vec3(-2.2,-1,-.2),vec3(-.5,-1.8,-.5),vec3(0,0,-1.5),vec3(0,0,-3),vec3(4,0,-6),vec3(0),vec3(0),vec3(0,0,-4))[o],vec3[](vec3(.1,.1,1.5),vec3(.35,.6,.4),vec3(-.1,-1,-.2),vec3(-2.8,-1.8,-.5),vec3(.4,-6,-1.5),vec3(0,0,-15),vec3(-4,40,-9),vec3(-50,0,0),vec3(0,70,0),vec3(0,0,-40))[o],C);"
   "e=normalize(mix(vec3[](vec3(.5,1.5,1),vec3(-.5,-1,-1),vec3(-1,-.1,.3),vec3(.8,.8,1),vec3(.2,.1,1),vec3(0,0,1),vec3(-.3,.5,1),vec3(-1,.2,0),vec3(1,1,0),vec3(0,0,1))[o],vec3[](vec3(.1,.1,1),vec3(0,.5,-1),vec3(-1,-.1,1),vec3(.1,.8,1.5),vec3(-.2,-.1,1),vec3(0,0,1),vec3(.3,.5,1),vec3(-1,-.2,0),vec3(0,1,.1),vec3(0,0,1))[o],C));"
   "const vec3 D=normalize(cross(vec3(0,1,0),e));"
   "p=normalize(mat3(D,normalize(cross(e,D)),e)*vec3((b-.5+(x.xy-.5)*.5/u)*2.*(u/min(u.x,u.y)),sqrt(3)));"
   "vec3 w,A;"
   "vec2 E=d(p,r,w,A),F=vec2(1,-1);"
   "int G=c;"
   "vec3 H=normalize(F.xyy*d(w+F.xyy*.001)+F.yyx*d(w+F.yyx*.001)+F.yxy*d(w+F.yxy*.001)+F.xxx*d(w+F.xxx*.001));"
   "c=G;"
   "vec3 I=sign(H)*abs(H);"
   "I/=dot(vec3(1),I);"
   "vec2 J=(I.x*w.zy+I.y*w.xz+I.z*w.xy)/vec2(1,4);"
   "vec3 K=w;"
   "K.xy-=l;"
   "vec3 L=t(vec3(l,1));"
   "bool M=fract(.5*l.x/3.)<.5;"
   "float N=0.;"
   "vec3 O=vec3(1);"
   "float P=.5,Q=.5;"
   "vec3 R=mix(a,s,L.z);"
   "if(c==0)"
     "{"
       "vec3 S=h(J*3),T=h(J*96);"
       "O=vec3(min(1,mix(.5,1.,S.y)*mix(.8,1.,sqrt(T.x))));"
       "P=O.x;"
       "Q=.01;"
       "H=normalize(H+(S-.5)*.1);"
     "}"
   "else if(c==1)"
     "O=vec3[](vec3(.8,.7,.6),vec3(.8,.2,.2),vec3(.5,.7,.8))[int(L.x*3.)],P=.99,Q=.01;"
   "else"
     " N=1.,O=R*2.;"
   "const vec3 S=H*.001*2.;"
   "w+=S;"
   "A+=S;"
   "vec3 T,U;"
   "vec2 V=d(z,A,T,U);"
   "vec3 W=vec3(0);"
   "P=105.<y&&y<=135.?"
     ".99:"
     "P;"
   "W+=V.y*h(O,Q,P,z,-p,H)*s;"
   "vec3 X=(M?"
     "vec3(-1.4,-.9,2.9):"
     "vec3(sign(L.x-.5),-.06,0))-K;"
   "float Y=length(X);"
   "W+=R*pow(1./(1.+max(0.,Y-1.)),2.)*h(O,Q,P,X/Y,-p,H);"
   "W*=sqrt(clamp(d(w+H*.1)/.1,0.,1.));"
   "W=mix(W,O,N);"
   "vec3 Z=s*mix(.01,.3,clamp(p.y*.5+.25,0.,1.)),_=max(vec3(0),mix(Z,W,E.x));"
   "_*=smoothstep(.8,.4,length(b-.5));"
   "_=mix(_,textureLod(v,b,2.).xyz,.35);"
   "_=_*(2.51*_+.03)/(_*(2.43*_+.59)+.14);"
   "_+=x*.03;"
   "_=clamp(_,0.,1.);"
   "_=pow(_,vec3(.8));"
   "_*=min((.5-abs(B-.5))*10,1);"
   "i=vec4(_,1);"
 "}" 
#endif

