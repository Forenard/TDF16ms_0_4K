// Generated with Shader Minifier 1.3.6 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADER_MINIFIER_IMPL
#ifndef SHADER_MINIFIER_HEADER
# define SHADER_MINIFIER_HEADER
# define VAR_backBuffer0 "v"
# define VAR_outColor0 "c"
# define VAR_waveOutPosition "m"
#endif
#else // if SHADER_MINIFIER_IMPL
// graphics_fragment_shader.i
"#version 430\n"
 "layout(binding=0) uniform sampler2D v;"
 "layout(location=0) uniform int m;"
 "vec2 f=vec2(1920,1080);"
 "float a=m/4.8e4;"
 "layout(location=0) out vec4 c;"
 "float x;"
 "int i;"
 "const float y=acos(-1.),s=y*2.,z=y*(3.-sqrt(5.));"
 "const vec3 d=vec3(255,137,14)/255.,l=vec3(191,211,255)/255.;"
 "vec2 n(float v)"
 "{"
   "return vec2(cos(v),sin(v));"
 "}"
 "mat2 t(float v)"
 "{"
   "vec2 u=n(v);"
   "return mat2(u.x,u.y,-u.y,u.x);"
 "}"
 "vec3 p(vec3 v)"
 "{"
   "uvec3 u=floatBitsToUint(v);"
   "u=(u>>8U^u.yzx)*1103515245u;"
   "u=(u>>8U^u.yzx)*1103515245u;"
   "u=(u>>8U^u.yzx)*1103515245u;"
   "return vec3(u)/float(-1u);"
 "}"
 "vec3 h(vec2 v)"
 "{"
   "vec2 u=floor(v),y=fract(v);"
   "y=y*y*(3.-2.*y);"
   "vec3 m=mix(p(vec3(u,.12)),p(vec3(u+vec2(1,0),.12)),y.x),x=mix(p(vec3(u+vec2(0,1),.12)),p(vec3(u+vec2(1),.12)),y.x);"
   "return mix(m,x,y.y);"
 "}"
 "vec3 e(vec2 v)"
 "{"
   "const mat2 m=t(z)*2.;"
   "float y=1.;"
   "vec4 u=vec4(0);"
   "for(int f=0;f<6;f++)"
     "u+=y*vec4(h(v),1),y*=.5,v*=m;"
   "return u.xyz/u.w;"
 "}"
 "float r(float v)"
 "{"
   "return v*v*(v*v)*v;"
 "}"
 "vec3 e(vec3 v,float u,float m,vec3 x,vec3 z,vec3 f)"
 "{"
   "float c=m*m;"
   "c=max(c,.001);"
   "vec3 i=.04*(1.-u)+v*u,l=normalize(x+z);"
   "float s=clamp(dot(f,z),0.,1.)+1e-5,a=clamp(dot(f,x),0.,1.),n=clamp(dot(f,l),0.,1.),p=clamp(dot(x,l),0.,1.),b=n*c,d=c/(1.-n*n+b*b),o=c*c,e=.5+2.*c*p*p;"
   "return(d*d/y*(.5/(a*sqrt(max(0.,s*s*(1.-o)+o))+s*sqrt(max(0.,a*a*(1.-o)+o))))*(i+(1.-i)*r(1.-p))+v*(1.-u)*((1.+(e-1.)*r(1.-a))*(1.+(e-1.)*r(1.-s))/y))*a;"
 "}"
 "float e(vec3 v,vec3 y)"
 "{"
   "vec3 u=abs(v)-y*.5;"
   "return min(max(u.x,max(u.y,u.z)),0.)+length(max(u,0.));"
 "}"
 "const vec2 u=vec2(6,4)*.5;"
 "vec2 w(inout vec3 v)"
 "{"
   "vec2 m=floor(v.xy/u)*u+u*.5;"
   "v.xy=mod(v.xy,u)-.5*u;"
   "return m;"
 "}"
 "float b(vec3 v)"
 "{"
   "vec3 m=v;"
   "vec2 f=w(v);"
   "vec3 c=p(vec3(f,0));"
   "float z,l;"
   "vec3 a;"
   "bool d=fract(.5*f.x/u.x)<.5;"
   "a=abs(fract(m*10.)-.5);"
   "float o=dot(vec3(1),smoothstep(.04,.02,a))/3.*.001;"
   "const float b=u.x*.2;"
   "float g=min(max((v.x--u.x*.5-b)/(u.x*.5-b--u.x*.5-b),0.),1.)*u.y+u.y*.25,h=v.y-g,r=min(min(max((min(abs(h),abs(h+u.y))-u.y*.25)*(b*2./sqrt(u.y*u.y+b*b*4.)),-v.z),-v.z+3.),max(abs(v.x)-u.x*.5+b,-v.z+.5));"
   "r+=o;"
   "a=v-vec3(-u.x*.45,0,-.07);"
   "a.x=abs(a.x-.1)-.1;"
   "r=min(r,length(a.xz)-.07);"
   "a.y=abs(fract(a.y)-.5)-.06;"
   "r=min(r,e(a+vec3(.1,0,0),vec3(.05,0,0))-.01);"
   "vec2 t=abs(vec2(length(a.xz),a.y))-vec2(.08,.02);"
   "r=min(r,min(max(t.x,t.y),0.)+length(max(t,0.)));"
   "float B=-v.z;"
   "B=max(B,-e(v,vec3(u-.2,4)));"
   "a=v-vec3(0,0,.75);"
   "a.x=abs(a.x);"
   "const vec2 C=u-.2;"
   "B=min(B,e(a,vec3(C,.05)));"
   "const vec3 A=vec3(C.x*.25-.125,C.y*.75,.1);"
   "B=max(B,-e(a-vec3(A.x*.5+.05,-A.y*.1,0),A));"
   "const vec3 D=vec3(A.x,A.y*.5,A.z);"
   "B=max(B,-e(a-vec3(D.x*1.5+.15,D.y*.3,0),D));"
   "B=min(B,-.01+e(v-vec3(0,-u.y*.25,.1),vec3(u.x-.2,u.y*.3,.025)));"
   "a=v-vec3(0,-u.y*.25,.1);"
   "a.x=a.x-.2*clamp(round(a.x/.2),-6,6);"
   "B=max(B,-e(a,vec3(.06,u.y*.25,.05)));"
   "B=min(B,-.01+e(v-vec3(0,-u.y*.1-.025,0),vec3(u.x-.2,.05,.2)));"
   "z=-.01+e(v-vec3(1.1,-.77,-.02),vec3(.4,.28,.1));"
   "a=v-vec3(1.1,-.77,-.02)-vec3(-.06,0,-.1);"
   "z=max(z,-e(a,vec3(0,0,.1))+.1);"
   "a.z-=.05;"
   "z=min(z,length(a)-.015);"
   "const float E=y/32.;"
   "float F=atan(a.y,a.x);"
   "F=mod(F,E*2.)-E;"
   "a.xy=n(F)*length(a.xy);"
   "z=min(z,e(a,vec3(.2,0,0))-.002);"
   "B=min(B,z);"
   "float G=d?"
     "r:"
     "B,H=smoothstep(0.,1.5,.9-v.y);"
   "vec3 I=v;"
   "I.x*=mix(1.1,1.,H);"
   "float J=c.x*s,K=x*.5+J,L=cos(J+I.x*y*7.+.5*y*cos(I.x*7.))*.05+cos(I.x*2.+K*2.+.5*y*cos(K))*.05;"
   "I-=vec3(0,0,1.+L*H);"
   "z=e(I,vec3(u-.4,.01))*.5-.01;"
   "z+=float(d)*1e9;"
   "i=z<G?"
     "1:"
     "0;"
   "G=min(G,z);"
   "l=length(v-vec3(sign(c.x-.5),-.09,0))-.1;"
   "z=length(v-vec3(-u*.5+.1,2.9))-.1;"
   "z=d?"
     "z:"
     "l;"
   "i=z<G?"
     "2:"
     "i;"
   "return min(G,z);"
 "}"
 "vec2 b(vec3 v,vec3 m,out vec3 a)"
 "{"
   "float f=1.,z=1e2,c,B=0.;"
   "for(int i=0;i<256;i++)"
     "{"
       "a=m+v*B;"
       "a.z=90.<=x&&x<105.?"
         "abs(a.z)-2.:"
         "a.z;"
       "a.xz=105.<=x&&x<120.?"
         "vec2((atan(a.z,a.x)+y)/s*u.x*8.,length(a.xz)-4.):"
         "a.xz;"
       "c=b(a);"
       "float o=c*c/(2.*z),l=sqrt(c*c-o*o);"
       "f=min(f,l/(.02*max(0.,B-o)));"
       "z=c;"
       "vec2 d=(floor((a.xy+sign(v.xy)*u)/u)+.5)*u,r=abs(d-a.xy)-.5*u;"
       "r=max(r,0.)/abs(v.xy)+.001+float(a.z<-2.)*1e2;"
       "c=min(c,min(r.x,r.y));"
       "B+=c;"
       "if(c<.001)"
         "return vec2(1,.05);"
       "if(B>1e2)"
         "return vec2(0,max(f,.05));"
     "}"
   "return vec2(0,max(f,.05));"
 "}"
 "const vec3 o=normalize(vec3(1,1,-1));"
 "void main()"
 "{"
   "x=a;"
   "const vec2 m=gl_FragCoord.xy,z=f.xy,B=m/z;"
   "const vec3 n=p(vec3(m,x));"
   "vec3 r=vec3(1),s=vec3(0,0,-1),I;"
   "float F=x/15.;"
   "int g=int(F)%8;"
   "float h=fract(F),A=g==4?"
     "(floor(h*4.)+h)*.25:"
     "h;"
   "r=mix(vec3[](vec3(.2,.2,2.2),vec3(.4,.2,2),vec3(.8-u.x,-1,0),vec3(-.5,-1.8,-.3),vec3(0,0,-3),vec3(0,0,-6),vec3(0),vec3(0))[g],vec3[](vec3(.1,.1,1.5),vec3(.35,.6,.4),vec3(-.1,-1,0),vec3(.2-u.x,-1.8,-.3),vec3(0,0,-15),vec3(0,30,-9),vec3(-70,0,0),vec3(0,70,0))[g],A);"
   "s=normalize(mix(vec3[](vec3(.5,1.5,1),vec3(-.5,-1,-1),vec3(-1,-.1,.3),vec3(1,.2,.8),vec3(0,0,1),vec3(-.2,0,1),vec3(-1,.2,0),vec3(1,1,0))[g],vec3[](vec3(.1,.1,1),vec3(0,0,-1),vec3(-1,-.1,1),vec3(1,.2,.8),vec3(0,0,1),vec3(.2,0,1),vec3(-1,-.2,0),vec3(0,1,.1))[g],A));"
   "const vec3 t=normalize(cross(vec3(0,1,0),s));"
   "I=normalize(mat3(t,normalize(cross(s,t)),s)*vec3((B-.5+(n.xy-.5)*.25/z)*2.*(z/min(z.x,z.y)),1./tan(75.*y/360.)));"
   "vec3 C;"
   "vec2 D=b(I,r,C),G=vec2(1,-1);"
   "int E=i;"
   "vec3 K=normalize(G.xyy*b(C+G.xyy*.001)+G.yyx*b(C+G.yyx*.001)+G.yxy*b(C+G.yxy*.001)+G.xxx*b(C+G.xxx*.001));"
   "i=E;"
   "vec3 H=sign(K)*abs(K);"
   "H/=dot(vec3(1),H);"
   "vec2 J=(H.x*C.zy+H.y*C.xz+H.z*C.xy)*vec2(3,1);"
   "vec3 L=C;"
   "vec2 M=w(L);"
   "vec3 N=p(vec3(M,0));"
   "float O=0.;"
   "vec3 P=vec3(1);"
   "float Q=.5,R=.5;"
   "vec3 S=mix(d,l,N.x);"
   "if(i==0)"
     "{"
       "vec3 T=e(J*3.),U=e(J*96.);"
       "P=vec3(clamp(1.3*mix(.6,1.,T.y)*mix(.8,1.,pow(U.x,3.)),0.,1.));"
       "Q=mix(.5,1.,pow(T.y,3.));"
       "R=.01;"
       "K=normalize(K+(T*2.-1.)*.05);"
     "}"
   "else if(i==1)"
     "P=vec3[](vec3(.8,.7,.6),vec3(.8,.2,.2),vec3(.5,.7,.8))[int(N.x*3.)],Q=.99,R=.01;"
   "else"
     " O=1.,P=S;"
   "C+=K*.001*2.;"
   "vec3 T;"
   "vec2 U=b(o,C,T);"
   "vec3 V=vec3(0);"
   "V+=U.y*e(P,R,Q,o,-I,K)*l*.5;"
   "vec3 W=(fract(.5*M.x/u.x)<.5?"
     "vec3(-u*.5+.1,2.9):"
     "vec3(sign(N.x-.5),-.06,0))-L;"
   "float X=length(W);"
   "V+=S*pow(1./(1.+max(0.,X-1.)),2.)*e(P,R,Q,W/X,-I,K);"
   "V*=sqrt(clamp(b(C+K*.05)/.05,0.,1.));"
   "V=mix(V,P,O);"
   "vec3 Y=vec3(mix(.01,.3,clamp((I.y+.5)*.5,0.,1.)))*smoothstep(1.,.9,I.y),Z=mix(Y,V,D.x);"
   "Z+=n*.03;"
   "Z=pow(Z,vec3(.6));"
   "Z=Z*(2.51*Z+.03)/(Z*(2.43*Z+.59)+.14);"
   "Z.xy=smoothstep(0.,1.,Z.xy);"
   "Z*=clamp((.5-abs(h-.5))*10.,0.,1.);"
   "vec4 _=vec4(Z,1);"
   "c=mix(_,texture(v,B),.5);"
 "}" 
#endif

