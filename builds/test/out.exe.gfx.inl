// Generated with Shader Minifier 1.3.6 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADER_MINIFIER_IMPL
#ifndef SHADER_MINIFIER_HEADER
# define SHADER_MINIFIER_HEADER
# define VAR_backBuffer0 "v"
# define VAR_outColor0 "f"
# define VAR_waveOutPosition "m"
#endif
#else // if SHADER_MINIFIER_IMPL
// graphics_fragment_shader.i
"#version 430\n"
 "layout(binding=0) uniform sampler2D v;"
 "layout(location=0) uniform int m;"
 "vec2 i=vec2(1920,1080);"
 "float n=m/4.8e4;"
 "out vec4 f;"
 "float x;"
 "int c;"
 "const float y=acos(-1.),a=y*2.,z=y*(3.-sqrt(5.));"
 "const vec3 d=vec3(255,137,14)/255.,l=vec3(191,211,255)/255.;"
 "vec2 s(float v)"
 "{"
   "return vec2(cos(v),sin(v));"
 "}"
 "mat2 t(float v)"
 "{"
   "vec2 u=s(v);"
   "return mat2(u.x,u.y,-u.y,u.x);"
 "}"
 "bool s(float v,float m,out float y)"
 "{"
   "y=(x-v)/(m-v);"
   "return 0.<=y&&y<1.;"
 "}"
 "vec3 p(vec3 v)"
 "{"
   "uvec3 u=floatBitsToUint(v);"
   "u=(u>>8U^u.yzx)*1103515245u;"
   "u=(u>>8U^u.yzx)*1103515245u;"
   "u=(u>>8U^u.yzx)*1103515245u;"
   "return vec3(u)/float(-1u);"
 "}"
 "vec3 e(vec2 v)"
 "{"
   "vec2 m=floor(v),u=fract(v);"
   "u=u*u*(3.-2.*u);"
   "vec3 i=mix(p(vec3(m,.12)),p(vec3(m+vec2(1,0),.12)),u.x),x=mix(p(vec3(m+vec2(0,1),.12)),p(vec3(m+vec2(1),.12)),u.x);"
   "return mix(i,x,u.y);"
 "}"
 "vec3 h(vec2 v)"
 "{"
   "const mat2 m=t(z)*2.;"
   "float x=1.;"
   "vec4 u=vec4(0);"
   "for(int f=0;f<6;f++)"
     "u+=x*vec4(e(v),1),x*=.5,v*=m;"
   "return u.xyz/u.w;"
 "}"
 "float r(float v)"
 "{"
   "return v*v*(v*v)*v;"
 "}"
 "vec3 e(vec3 v,float u,float m,vec3 x,vec3 i,vec3 f)"
 "{"
   "float c=m*m;"
   "c=max(c,.001);"
   "vec3 z=.04*(1.-u)+v*u,o=normalize(x+i);"
   "float a=clamp(dot(f,i),0.,1.)+1e-5,l=clamp(dot(f,x),0.,1.),n=clamp(dot(f,o),0.,1.),p=clamp(dot(x,o),0.,1.),s=n*c,d=c/(1.-n*n+s*s),C=c*c,g=.5+2.*c*p*p;"
   "return(d*d/y*(.5/(l*sqrt(max(0.,a*a*(1.-C)+C))+a*sqrt(max(0.,l*l*(1.-C)+C))))*(z+(1.-z)*r(1.-p))+v*(1.-u)*((1.+(g-1.)*r(1.-l))*(1.+(g-1.)*r(1.-a))/y))*l;"
 "}"
 "float e(vec3 v,vec3 x)"
 "{"
   "vec3 u=abs(v)-x*.5;"
   "return min(max(u.x,max(u.y,u.z)),0.)+length(max(u,0.));"
 "}"
 "const vec2 u=vec2(6,4)*.5;"
 "vec2 w(inout vec3 v)"
 "{"
   "vec2 i=floor(v.xy/u)*u+u*.5;"
   "v.xy=mod(v.xy,u)-.5*u;"
   "return i;"
 "}"
 "float b(vec3 v)"
 "{"
   "vec3 m=v;"
   "vec2 i=w(v);"
   "vec3 f=p(vec3(i,0));"
   "float z,o;"
   "vec3 n;"
   "bool d=fract(.5*i.x/u.x)<.5;"
   "float l=float(!d)*1e9,C=float(d)*1e9;"
   "n=abs(fract(m*10.)-.5);"
   "float g=dot(vec3(1),smoothstep(.04,.02,n))/3.*.001;"
   "const float b=u.x*.2;"
   "float D=min(max((v.x--u.x*.5-b)/(u.x*.5-b--u.x*.5-b),0.),1.)*u.y+u.y*.25,A=v.y-D,r=min(min(max((min(abs(A),abs(A+u.y))-u.y*.25)*(b*2./sqrt(u.y*u.y+b*b*4.)),-v.z),-v.z+3.),max(abs(v.x)-u.x*.5+b,-v.z+.5));"
   "r+=g;"
   "n=v-vec3(-u.x*.45,0,-.07);"
   "n.x=abs(n.x-.1)-.1;"
   "r=min(r,length(n.xz)-.07);"
   "n.y=abs(fract(n.y)-.5)-.06;"
   "r=min(r,e(n+vec3(.1,0,0),vec3(.05,0,0))-.01);"
   "vec2 h=abs(vec2(length(n.xz),n.y))-vec2(.08,.02);"
   "r=min(r,min(max(h.x,h.y),0.)+length(max(h,0.)));"
   "r+=l;"
   "float B=-v.z;"
   "B=max(B,-e(v,vec3(u-.2,4)));"
   "n=v-vec3(0,0,.75);"
   "n.x=abs(n.x);"
   "const vec2 E=u-.2;"
   "B=min(B,e(n,vec3(E,.05)));"
   "const vec3 t=vec3(E.x*.25-.125,E.y*.75,.1);"
   "B=max(B,-e(n-vec3(t.x*.5+.05,-t.y*.1,0),t));"
   "const vec3 F=vec3(t.x,t.y*.5,t.z);"
   "B=max(B,-e(n-vec3(F.x*1.5+.15,F.y*.3,0),F));"
   "B=min(B,-.01+e(v-vec3(0,-u.y*.25,.1),vec3(u.x-.2,u.y*.3,.025)));"
   "n=v-vec3(0,-u.y*.25,.1);"
   "n.x=n.x-.2*clamp(round(n.x/.2),-6,6);"
   "B=max(B,-e(n,vec3(.06,u.y*.25,.05)));"
   "B=min(B,-.01+e(v-vec3(0,-u.y*.1-.025,0),vec3(u.x-.2,.05,.2)));"
   "z=-.01+e(v-vec3(1.1,-.77,-.02),vec3(.4,.28,.1));"
   "n=v-vec3(1.1,-.77,-.02)-vec3(-.06,0,-.1);"
   "z=max(z,-e(n,vec3(0,0,.1))+.1);"
   "n.z-=.05;"
   "z=min(z,length(n)-.015);"
   "const float G=y/32.;"
   "float H=atan(n.y,n.x);"
   "H=mod(H,G*2.)-G;"
   "n.xy=s(H)*length(n.xy);"
   "z=min(z,e(n,vec3(.2,0,0))-.002);"
   "B=min(B,z);"
   "B+=C;"
   "float I=min(B,r),J=smoothstep(0.,1.5,.9-v.y);"
   "vec3 K=v;"
   "K.x*=mix(1.1,1.,J);"
   "float L=f.x*a,M=x*.5+L,N=cos(L+K.x*y*7.+.5*y*cos(K.x*7.))*.05+cos(K.x*2.+M*2.+.5*y*cos(M))*.05;"
   "K-=vec3(0,0,1.+N*J);"
   "z=e(K,vec3(u-.4,.01))*.5-.01;"
   "z+=C;"
   "c=z<I?"
     "1:"
     "0;"
   "I=min(I,z);"
   "o=length(v-vec3(sign(f.x-.5),-.09,0))-.1;"
   "o+=C;"
   "z=length(v-vec3(-u*.5+.1,2.9))-.1;"
   "z+=l;"
   "z=min(z,o);"
   "c=z<I?"
     "2:"
     "c;"
   "return min(I,z);"
 "}"
 "vec2 b(vec3 v,vec3 m,out vec3 n)"
 "{"
   "float f=1.,z=1e2,x,c=0.;"
   "for(int i=0;i<256;i++)"
     "{"
       "n=m+v*c;"
       "float o;"
       "if(s(90.,105.,o))"
         "n.z=abs(n.z)-2.;"
       "if(s(105.,120.,o))"
         "n.xz=vec2((atan(n.z,n.x)+y)/a*u.x*8.,length(n.xz)),n.z-=4.;"
       "x=b(n);"
       "float l=x*x/(2.*z),B=sqrt(x*x-l*l);"
       "f=min(f,B/(.02*max(0.,c-l)));"
       "z=x;"
       "vec2 d=(floor((n.xy+sign(v.xy)*u)/u)+.5)*u,r=abs(d-n.xy)-.5*u;"
       "r=max(r,0.)/abs(v.xy)+.001+float(n.z<-2.)*1e2;"
       "x=min(x,min(r.x,r.y));"
       "c+=x;"
       "if(x<.001)"
         "return vec2(1,.1);"
       "if(c>1e2)"
         "return vec2(0,max(f,.1));"
     "}"
   "return vec2(0,max(f,.1));"
 "}"
 "const vec3 o=normalize(vec3(1,1,-1));"
 "vec3 B(vec3 v)"
 "{"
   "vec2 m=vec2(atan(v.x,-v.z),acos(v.y)*2.)/a*20.+vec2(.05,.01)*x;"
   "vec3 u=vec3(mix(.1,.5,h(m).x)),f=mix(vec3(.01),u,clamp((v.y+.5)*.5,0.,1.));"
   "float n=clamp(dot(v,o),0.,1.);"
   "n=smoothstep(.8,1.,n);"
   "f*=mix(1.,3.,n);"
   "f=mix(f,vec3(1),pow(min(max((n*n-.995)/.005,0.),1.),5.));"
   "f*=min(max((v.y-1.)/-.1,0.),1.);"
   "return f;"
 "}"
 "vec3 B(inout vec3 v,vec3 x,vec3 m)"
 "{"
   "vec3 n=sign(m)*abs(m);"
   "n/=dot(vec3(1),n);"
   "vec2 f=n.x*v.zy+n.y*v.xz+n.z*v.xy;"
   "vec3 z=v;"
   "vec2 i=w(z);"
   "vec3 B=p(vec3(.1,i));"
   "float y=0.;"
   "vec3 r=vec3(1);"
   "float a=.5,C=.5;"
   "vec3 s=(step(B.y,.9)*.8+.2)*mix(d,l,B.x);"
   "if(c==0)"
     "{"
       "vec3 t=h(f*3.*vec2(3,1)),K=h(f*96.*vec2(2,1));"
       "r=vec3(clamp(1.3*mix(.6,1.,t.y)*mix(.8,1.,pow(K.x,3.)),0.,1.));"
       "a=mix(.5,1.,pow(t.y,3.));"
       "C=.01;"
       "m=normalize(m+(t*2.-1.)*.05);"
     "}"
   "else if(c==1)"
     "{"
       "float g=B.x;"
       "r=g<.7?"
         "vec3(.8,.7,.6):"
         "g<.8?"
           "vec3(.8,.2,.2):"
           "g<.9?"
             "vec3(.8,.6,.3):"
             "vec3(.5,.7,.8);"
       "a=.99;"
       "C=.01;"
     "}"
   "else"
     " y=1.,r=s;"
   "v+=m*.001*2.;"
   "vec3 t;"
   "vec2 g=b(o,v,t);"
   "vec3 K=vec3(0);"
   "K+=g.y*e(r,C,a,o,x,m)*l;"
   "vec3 H=(fract(.5*i.x/u.x)<.5?"
     "vec3(-u*.5+.1,2.9):"
     "vec3(sign(B.x-.5),-.06,0))-z;"
   "float A=length(H);"
   "H/=A;"
   "K+=s*pow(1./(1.+max(0.,A)),2.)*e(r,C,a,H,x,m);"
   "K*=sqrt(clamp(b(v+m*.05)/.05,0.,1.));"
   "return mix(K,r,y);"
 "}"
 "const vec2 g=gl_FragCoord.xy,C=i.xy,A=C/min(C.x,C.y);"
 "vec2 D=vec2(.5);"
 "void B(out vec3 v,out vec3 f,out vec3 n,vec2 m)"
 "{"
   "float i=60.,z=0.;"
   "v=vec3(1);"
   "n=vec3(0,0,1);"
   "float c=0.;"
   "if(s(0.,15.,c))"
     "v=vec3(.2,.2,mix(2.2,1.5,c)),n=normalize(mix(vec3(.5,1.5,1),vec3(.1,.1,1),c));"
   "else if(s(15.,30.,c))"
     "i=mix(60.,90.,c),z=mix(0.,.4,c),v=mix(vec3(.4,.2,2),vec3(.35,.6,.4),c),n=normalize(mix(vec3(-.5,-1,-1),vec3(0,0,-1),c));"
   "else if(s(30.,45.,c))"
     "v=vec3(mix(.8-u.x,-.1,c),-1,0),n=normalize(vec3(-1,-.1,.3));"
   "else if(s(45.,60.,c))"
     "v=vec3(mix(-.5,.2-u.x,c),-1.8,-.3),n=normalize(vec3(1,.2,.8));"
   "else if(s(60.,75.,c))"
     "{"
       "float B=floor(c*3.)*8.+fract(c*3.);"
       "v=vec3(0,0,-1.-B);"
       "n=vec3(0,0,1);"
     "}"
   "else if(s(77.,90.,c))"
     "{"
       "float B=20.*c;"
       "vec3 r=vec3(-u.x*.5+.3,B*u.y,0);"
       "v=r+vec3(mix(3,-3,c),-5,-3);"
       "n=normalize(r-v);"
     "}"
   "else if(s(90.,105.,c))"
     "v=vec3(-x*4.,0,0),n=normalize(vec3(-1,mix(.2,-.2,c),0));"
   "else if(s(105.,120.,c))"
     "v=vec3(0,x*2.,0),n=normalize(vec3(0,1,mix(0.,1.,c))),n.xz*=t(y*c);"
   "vec3 B=(h(vec2(-4.2,x*.1))*2.-1.)*.05;"
   "v+=B;"
   "vec3 r=vec3(0,1,0),o=normalize(cross(r,n));"
   "r=normalize(cross(n,o));"
   "mat3 d=mat3(o,r,n);"
   "float a=1./tan(i*y/360.);"
   "a-=a*length(m)*z;"
   "f=normalize(d*vec3(m,a));"
 "}"
 "vec4 B(vec3 v,vec3 x)"
 "{"
   "vec3 m;"
   "if(b(v,x,m).x<.5)"
     "return vec4(B(v),100);"
   "float n=length(m-x);"
   "const vec2 u=vec2(1,-1);"
   "int i=c;"
   "vec3 z=normalize(u.xyy*b(m+u.xyy*.001)+u.yyx*b(m+u.yyx*.001)+u.yxy*b(m+u.yxy*.001)+u.xxx*b(m+u.xxx*.001));"
   "c=i;"
   "vec3 f=B(m,-v,z);"
   "return vec4(f,n);"
 "}"
 "vec3 E(vec3 v)"
 "{"
   "return v*(2.51*v+.03)/(v*(2.43*v+.59)+.14);"
 "}"
 "vec3 E(vec3 v,vec3 m)"
 "{"
   "v+=p(m)*.05;"
   "v=pow(v,vec3(.8));"
   "v=E(v);"
   "v.x=smoothstep(-.025,1.025,v.x);"
   "float n=0.;"
   "if(s(0.,10.,n))"
     "v*=n*n;"
   "else if(s(14.,16.,n))"
     "v*=2.*abs(n-.5);"
   "else if(s(29.,31.,n))"
     "v*=2.*abs(n-.5);"
   "else if(s(44.,46.,n))"
     "v*=2.*abs(n-.5);"
   "else if(s(59.,61.,n))"
     "v*=2.*abs(n-.5);"
   "else if(s(74.,77.,n))"
     "v*=clamp(75.-x,0.,1.);"
   "else if(s(119.,120.,n))"
     "v*=1.-n;"
   "else if(x>=120.)"
     "v*=0.;"
   "return v;"
 "}"
 "void main()"
 "{"
   "x=n;"
   "vec2 m=g/C;"
   "m+=(p(vec3(g,x)).xy-.5)*.25/C;"
   "vec2 c=(m-.5)*2.*A;"
   "vec3 u,r,o;"
   "B(u,r,o,c);"
   "vec4 i=B(r,u);"
   "i.xyz=E(i.xyz,vec3(-x,4.2*m));"
   "vec4 z=texture(v,m);"
   "f=mix(i,z,.5);"
 "}" 
#endif

