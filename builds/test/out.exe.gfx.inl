// Generated with Shader Minifier 1.3.6 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADER_MINIFIER_IMPL
#ifndef SHADER_MINIFIER_HEADER
# define SHADER_MINIFIER_HEADER
# define VAR_backBuffer0 "v"
# define VAR_backBuffer1 "m"
# define VAR_outColor0 "f"
# define VAR_outColor1 "r"
# define VAR_waveOutPosition "i"
#endif
#else // if SHADER_MINIFIER_IMPL
// graphics_fragment_shader.i
"#version 430\n"
 "layout(binding=0) uniform sampler2D v;"
 "layout(binding=1) uniform sampler2D m;"
 "layout(location=0) uniform int i;"
 "vec2 n=vec2(1920,1080);"
 "float a=i/4.8e4;"
 "layout(location=0) out vec4 f;"
 "layout(location=1) out vec4 r;"
 "float x;"
 "int c;"
 "const float y=acos(-1.),z=2.*y,s=y*(3.-sqrt(5.));"
 "const vec3 o=vec3(255,137,14)/255.,p=vec3(191,211,255)/255.;"
 "mat2 t(float v)"
 "{"
   "float m=cos(v),g=sin(v);"
   "return mat2(m,-g,g,m);"
 "}"
 "vec2 e(float v)"
 "{"
   "return vec2(cos(v),sin(v));"
 "}"
 "vec2 h(vec2 v)"
 "{"
   "float f=atan(v.y,v.x)+z-y*.5+y/32.;"
   "f=mod(f,z/32.)+y*.5-y/32.;"
   "return e(f)*length(v);"
 "}"
 "vec2 e(vec3 g,vec3 v)"
 "{"
   "v=sign(v)*pow(abs(v),vec3(1));"
   "v/=dot(vec3(1),v);"
   "return v.x*g.zy+v.y*g.xz+v.z*g.xy;"
 "}"
 "mat3 w(vec3 v)"
 "{"
   "v=normalize(v);"
   "vec3 f=vec3(0,1,0),m=normalize(cross(f,v));"
   "f=normalize(cross(v,m));"
   "return mat3(m,f,v);"
 "}"
 "bool e(float v,float m,out float f)"
 "{"
   "f=(x-v)/(m-v);"
   "return 0.<=f&&f<1.;"
 "}"
 "uvec3 l(uvec3 v)"
 "{"
   "v=v*1664525u+1013904223u;"
   "v.x+=v.y*v.z;"
   "v.y+=v.z*v.x;"
   "v.z+=v.x*v.y;"
   "v^=v>>16u;"
   "v.x+=v.y*v.z;"
   "v.y+=v.z*v.x;"
   "v.z+=v.x*v.y;"
   "return v;"
 "}"
 "vec3 d(vec3 v)"
 "{"
   "uvec3 m=l(floatBitsToUint(v));"
   "return vec3(m)/float(4294967295u);"
 "}"
 "vec3 u(vec2 v)"
 "{"
   "vec2 m=floor(v),f=fract(v);"
   "f=f*f*(3.-2.*f);"
   "vec3 i=mix(d(vec3(m,.12)),d(vec3(m+vec2(1,0),.12)),f.x),x=mix(d(vec3(m+vec2(0,1),.12)),d(vec3(m+vec2(1),.12)),f.x);"
   "return mix(i,x,f.y);"
 "}"
 "vec3 M(vec2 v)"
 "{"
   "const mat2 m=t(s)*2.;"
   "float f=1.;"
   "vec4 g=vec4(0);"
   "for(int i=0;i<6;i++)"
     "g+=f*vec4(u(v),1),f*=.5,v*=m;"
   "return g.xyz/g.w;"
 "}struct Material{int type;vec3 albedo;float metallic;float roughness;};"
 "float B(float v)"
 "{"
   "return v*v*(v*v)*v;"
 "}"
 "float B(float v,float m)"
 "{"
   "float x=m*v,f=v/(1.-m*m+x*x);"
   "return f*f*(1./y);"
 "}"
 "float B(float v,float x,float m)"
 "{"
   "float g=v*v;"
   "return.5/(m*sqrt(max(0.,x*x*(1.-g)+g))+x*sqrt(max(0.,m*m*(1.-g)+g)));"
 "}"
 "vec3 M(vec3 v,float g)"
 "{"
   "return v+(1.-v)*B(1.-g);"
 "}"
 "float d(float v,float g)"
 "{"
   "return 1.+(v-1.)*B(1.-g);"
 "}"
 "float B(float v,float m,float f,float x)"
 "{"
   "float g=.5+2.*v*x*x;"
   "return d(f,g)*d(m,g)*(1./y);"
 "}"
 "vec3 M(Material v,vec3 m,vec3 f,vec3 x)"
 "{"
   "vec3 y=v.albedo;"
   "float g=v.metallic,c=v.roughness,r=c*c;"
   "r=max(r,.001);"
   "vec3 i=normalize(m+f);"
   "float o=clamp(dot(x,f),0.,1.)+1e-5,z=clamp(dot(x,m),0.,1.),n=clamp(dot(m,i),0.,1.),s=B(r,clamp(dot(x,i),0.,1.)),p=B(r,o,z);"
   "vec3 I=y*(1.-g)*B(r,o,z,n);"
   "return(s*p*M(.04*(1.-g)+y*g,n)+I)*z;"
 "}"
 "float M(float v,float g,float m)"
 "{"
   "return max(m,min(v,g))-length(max(vec2(m-v,m-g),vec2(0)));"
 "}"
 "float d(float v,float m,float g)"
 "{"
   "return min(-g,max(v,m))+length(max(vec2(g+v,g+m),vec2(0)));"
 "}"
 "float h(float v,float g,float m)"
 "{"
   "return d(v,-g,m);"
 "}"
 "float h(vec3 v,vec3 g)"
 "{"
   "vec3 m=abs(v)-g*.5;"
   "return min(max(m.x,max(m.y,m.z)),0.)+length(max(m,0.));"
 "}"
 "float l(vec3 v,float m,float g)"
 "{"
   "vec2 f=abs(vec2(length(v.xz),v.y))-vec2(g,m);"
   "return min(max(f.x,f.y),0.)+length(max(f,0.));"
 "}"
 "const vec2 g=vec2(5.7,4)*.5;"
 "vec2 C(inout vec3 v)"
 "{"
   "vec2 m=floor(v.xy/g)*g+g*.5;"
   "v.xy=mod(v.xy,g)-.5*g;"
   "return m;"
 "}"
 "float b(vec3 v)"
 "{"
   "vec3 f=v;"
   "vec2 m=C(v);"
   "vec3 i=d(vec3(m,0));"
   "float r,e;"
   "vec3 n;"
   "bool s=fract(.5*m.x/g.x)<.5;"
   "float a=float(!s)*1e9,o=float(s)*1e9;"
   "f=abs(fract(f*10.)-.5);"
   "float I=clamp(smoothstep(.04,.02,f.x)+smoothstep(.04,.02,f.y),0.,1.)*.002;"
   "const float p=g.x*.2;"
   "float D=min(max((v.x--g.x*.5-p)/(g.x*.5-p--g.x*.5-p),0.),1.)*g.y+g.y*.25,G=v.y-D,b=min(min(max((min(abs(G),abs(G+g.y))-g.y*.25)*(p*2./sqrt(g.y*g.y+p*p*4.)),-v.z),-v.z+3.),max(abs(v.x)-g.x*.5+p,-v.z+.5));"
   "b+=I*.5;"
   "n=v-vec3(-g.x*.45,0,-.07);"
   "n.x=abs(n.x-.1)-.1;"
   "b=min(b,length(n.xz)-.07);"
   "n.y=abs(fract(n.y)-.5)-.06;"
   "b=min(b,l((n-vec3(-.11,0,0)).yxz,.04,.01));"
   "b=min(b,l(n,.02,.08));"
   "b+=a;"
   "float u=-v.z;"
   "u=h(u,h(v,vec3(g-.2,4)),.01);"
   "n=v-vec3(0,0,.75);"
   "n.x=abs(n.x);"
   "vec2 F=g-.2;"
   "u=M(u,h(n,vec3(F,.05)),.01);"
   "vec3 E=vec3(F.x*.25-.125,F.y*.75,.1);"
   "u=h(u,h(n-vec3(E.x*.5+.05,-E.y*.1,0),E),.01);"
   "E.y*=.5;"
   "u=h(u,h(n-vec3(E.x*1.5+.15,E.y*.3,0),E),.01);"
   "u=min(u,-.01+h(v-vec3(0,-g.y*.25,.1),vec3(g.x-.2,g.y*.3,.025)));"
   "n=v-vec3(0,-g.y*.25,.1);"
   "n.x=n.x-.2*clamp(round(n.x/.2),-12,12);"
   "u=h(u,h(n,vec3(.06,g.y*.25,.05)),.01);"
   "u=min(u,-.01+h(v-vec3(0,-g.y*.1-.025,0),vec3(g.x-.2,.05,.2)));"
   "u=min(u,-.01+h(v-vec3(0,-.5*(g.y-.2)-.05,0),vec3(g.x,.05,.15)));"
   "u=M(u,l(v-vec3(sign(i.x-.5),-.18,0),.01,.075)-.01,.005);"
   "r=-.01+h(v-vec3(1.1,-.77,-.02),vec3(.4,.28,.1));"
   "n=v-vec3(1.1,-.77,-.02)-vec3(-.06,0,-.1);"
   "r=h(r,l(n.xzy,.1,.1),.005);"
   "n.z-=.05;"
   "r=min(r,-.002+l(n.xzy,.02,.02));"
   "n.xy=h(n.xy);"
   "r=M(r,l(n,.1,.002),.005);"
   "u=min(u,r);"
   "u+=o;"
   "float t=min(u,b),H=smoothstep(0.,1.5,.9-v.y);"
   "vec3 w=v;"
   "w.x*=mix(1.1,1.,H);"
   "float A=i.x*z,B=x*.5+A,J=cos(A+w.x*y*7.+.5*y*cos(w.x*7.))*.05+cos(w.x*2.+B*2.+.5*y*cos(B))*.05;"
   "w-=vec3(0,0,1.+J*H);"
   "r=h(w,vec3(g-.4,.01))*.5-.01;"
   "r+=o;"
   "c=r<t?"
     "1:"
     "0;"
   "t=min(t,r);"
   "e=length(v-vec3(sign(i.x-.5),-.06,0))-.1;"
   "e+=o;"
   "r=length(v-vec3(-g*.5+.1,2.9))-.1;"
   "r+=a;"
   "r=min(r,e);"
   "c=r<t?"
     "2:"
     "c;"
   "return min(t,r);"
 "}"
 "vec3 A(vec3 v)"
 "{"
   "const vec2 m=vec2(1,-1);"
   "int f=c;"
   "vec3 i=normalize(m.xyy*b(v+m.xyy*.001)+m.yyx*b(v+m.yyx*.001)+m.yxy*b(v+m.yxy*.001)+m.xxx*b(v+m.xxx*.001));"
   "c=f;"
   "return i;"
 "}"
 "vec3 A(vec3 v,vec3 m,vec3 g)"
 "{"
   "vec3 f=abs((floor((v+sign(m)*g)/g)+.5)*g-v)-.5*g;"
   "f=max(f,0.);"
   "f/=abs(m);"
   "return f;"
 "}"
 "vec2 C(vec3 v,vec3 m,out vec3 f)"
 "{"
   "float r=1.,x=1e2,n,u=0.;"
   "for(int i=0;i<256;i++)"
     "{"
       "f=m+v*u;"
       "float o;"
       "if(e(90.,105.,o))"
         "f.z=abs(f.z)-2.;"
       "if(e(105.,120.,o))"
         "f.xz=vec2((atan(f.z,f.x)+y)/z*g.x*8.,length(f.xz)),f.z-=4.;"
       "n=b(f);"
       "float p=n*n/(2.*x),c=sqrt(n*n-p*p);"
       "r=min(r,c/(.02*max(0.,u-p)));"
       "x=n;"
       "vec3 E=A(f,v,vec3(g,1000));"
       "E+=f.z<-2.?"
         "1e9:"
         "0.;"
       "n=min(n,E.x+.001);"
       "n=min(n,E.y+.001);"
       "u+=n;"
       "if(n<.001)"
         "return vec2(1,.1);"
       "if(u>1e2)"
         "return vec2(0,max(r,.1));"
     "}"
   "return vec2(0,max(r,.1));"
 "}"
 "Material A(vec3 v,inout vec3 f)"
 "{"
   "Material m=Material(0,vec3(1),.5,.5);"
   "vec2 x=e(v,f),g=C(v);"
   "vec3 n=d(vec3(.1,g));"
   "if(c==0)"
     "{"
       "vec3 i=M(x*3.*vec2(3,1)),r=M(x*96.*vec2(2,1));"
       "m.albedo=vec3(clamp(1.3*mix(.6,1.,i.y)*mix(.8,1.,pow(r.x,3.)),0.,1.));"
       "m.roughness=mix(.5,1.,pow(i.y,3.));"
       "m.metallic=.01;"
       "f=normalize(f+(i*2.-1.)*.05);"
     "}"
   "else if(c==1)"
     "{"
       "float i=n.x;"
       "m.albedo=i<.7?"
         "vec3(.8,.7,.6):"
         "i<.8?"
           "vec3(.8,.2,.2):"
           "i<.9?"
             "vec3(.8,.6,.3):"
             "vec3(.5,.7,.8);"
       "m.roughness=.99;"
       "m.metallic=.01;"
     "}"
   "else"
     " m.type=1,m.albedo=(step(n.y,.9)*.8+.2)*mix(o,p,n.x);"
   "return m;"
 "}"
 "const vec3 D=normalize(vec3(1,1,-1));"
 "vec3 E(vec3 v)"
 "{"
   "vec2 m=vec2(atan(v.x,-v.z),acos(v.y)*2.)/z*20.+vec2(.05,.01)*x;"
   "vec3 f=vec3(mix(.1,.5,M(m).x)),r=mix(vec3(.01),f,clamp((v.y+.5)*.5,0.,1.));"
   "float g=clamp(dot(v,D),0.,1.);"
   "g=smoothstep(.8,1.,g);"
   "r*=mix(1.,3.,g);"
   "r=mix(r,vec3(1),pow(min(max((g*g-.995)/.005,0.),1.),5.));"
   "r*=min(max((v.y-1.)/-.1,0.),1.);"
   "return r;"
 "}"
 "vec3 A(Material v,vec3 m,vec3 f,vec3 i)"
 "{"
   "vec3 r=vec3(0);"
   "vec2 x=C(m);"
   "vec3 n=d(vec3(.1,x)),y=(step(n.y,.9)*.8+.2)*mix(o,p,n.x),u=vec3(-g*.5+.1,2.9)-m;"
   "float c=length(u);"
   "u/=c;"
   "float e=max(0.,c-1.);"
   "vec3 b=y*pow(1./(1.+e),2.);"
   "r+=M(v,u,f,i)*b;"
   "u=vec3(sign(n.x-.5),-.06,0)-m;"
   "c=length(u);"
   "u/=c;"
   "e=max(0.,c);"
   "b=y*pow(1./(1.+e),2.);"
   "r+=M(v,u,f,i)*b;"
   "return r;"
 "}"
 "vec3 E(inout vec3 v,vec3 m,vec3 f)"
 "{"
   "Material g=A(v,f);"
   "v+=f*.001*2.;"
   "vec3 i;"
   "vec2 n=C(D,v,i);"
   "vec3 r=vec3(0);"
   "r+=n.y*M(g,D,m,f)*p;"
   "r+=A(g,v,m,f);"
   "r*=sqrt(clamp(b(v+f*.05)/.05,0.,1.));"
   "return mix(r,g.albedo,g.type);"
 "}"
 "const vec2 F=gl_FragCoord.xy,G=n.xy,H=G/min(G.x,G.y);"
 "vec2 I=vec2(.5);"
 "void A(out vec3 v,out vec3 f,out vec3 m,out vec2 r,vec2 n)"
 "{"
   "float i=60.,c=0.;"
   "v=vec3(1);"
   "m=vec3(0,0,1);"
   "float u=0.;"
   "if(e(0.,15.,u))"
     "u=pow(u,.5),v=vec3(.2,.2,2.2),m=normalize(mix(vec3(.5,1.5,1),vec3(.1,.1,1),u));"
   "else if(e(15.,30.,u))"
     "u=pow(u,.5),i=mix(60.,90.,u),c=mix(0.,.4,u),v=mix(vec3(.4,.2,2),vec3(.35,.6,.2),u),m=n.x<.5?"
       "(I=vec2(.25,.5),normalize(mix(vec3(-.5,-1,1),vec3(0,-1,1),u))):"
       "(I=vec2(.75,.5),normalize(mix(vec3(-.5,-1,-1),vec3(0,0,-1),u)));"
   "else if(e(30.,45.,u))"
     "v=vec3(mix(.8-g.x,-.1,u),-1,0),m=normalize(vec3(-1,-.1,.3));"
   "else if(e(45.,60.,u))"
     "m=n.x<.5?"
       "(I=vec2(.25,.5),v=vec3(mix(-.5,.2-g.x,u),-1.8,-.3),normalize(vec3(1,.2,.8))):"
       "(I=vec2(.75,.5),i=90.,v=mix(vec3(.4-g.x,-1,.7),vec3(-.2,-1.5,.7),u),normalize(vec3(-g.x*.8,-g.y*.5+.5,-1)-v));"
   "else if(e(60.,75.,u))"
     "{"
       "float p=floor(u*3.)*8.+fract(u*3.);"
       "v=vec3(0,0,-1.-p);"
       "m=vec3(0,0,1);"
     "}"
   "else if(e(77.,90.,u))"
     "{"
       "float o=20.*u;"
       "vec3 a=vec3(-g.x*.5+.3,o*g.y,0);"
       "v=a+vec3(mix(3,-3,u),-5,-3);"
       "m=normalize(a-v);"
     "}"
   "else if(e(90.,105.,u))"
     "v=vec3(-x*4.,0,0),m=normalize(vec3(-1,mix(.2,-.2,u),0));"
   "else if(e(105.,120.,u))"
     "v=vec3(0,x*2.,0),m=normalize(vec3(0,1,mix(0.,1.,u))),m.xz*=t(y*u);"
   "r=(n-I)*2.*H;"
   "vec3 a=(M(vec2(-4.2,x*.1))*2.-1.)*.05;"
   "v+=a;"
   "mat3 s=w(m);"
   "float o=1./tan(i*y/360.);"
   "o-=o*length(r)*c;"
   "vec3 b,z,p,E;"
   "b=normalize(s*vec3(r,o));"
   "z=v;"
   "p=m;"
   "E+=s*vec3(r*2.5,0)+v;"
   "f=normalize(mix(p,b,1.));"
   "v=mix(E,z,1.);"
 "}"
 "vec4 C(vec3 v,vec3 m)"
 "{"
   "vec3 f;"
   "if(C(v,m,f).x<.5)"
     "return vec4(E(v),100);"
   "float u=length(f-m);"
   "vec3 g=A(f),r=E(f,-v,g);"
   "return vec4(r,u);"
 "}"
 "float E(float v,float m)"
 "{"
   "return abs(min(1.,m*m)*.3*(m-v)/(abs(v*(m-.3))+1e-9))*10.;"
 "}"
 "vec3 J(vec3 v)"
 "{"
   "return v*(2.51*v+.03)/(v*(2.43*v+.59)+.14);"
 "}"
 "vec3 J(vec3 v,vec3 m)"
 "{"
   "v+=d(m)*.05;"
   "v=pow(v,vec3(.8));"
   "v=J(v);"
   "v.x=smoothstep(-.025,1.025,v.x);"
   "float f=0.;"
   "if(e(0.,10.,f))"
     "v*=f*f;"
   "else if(e(14.,16.,f))"
     "v*=2.*abs(f-.5);"
   "else if(e(29.,31.,f))"
     "v*=2.*abs(f-.5);"
   "else if(e(44.,46.,f))"
     "v*=2.*abs(f-.5);"
   "else if(e(59.,61.,f))"
     "v*=2.*abs(f-.5);"
   "else if(e(74.,77.,f))"
     "v*=clamp(75.-x,0.,1.);"
   "else if(e(119.,120.,f))"
     "v*=1.-f;"
   "else if(x>=120.)"
     "v*=0.;"
   "return v;"
 "}"
 "void main()"
 "{"
   "x=a;"
   "vec2 u=F/G;"
   "u+=(d(vec3(F,x)).xy-.5)*.25/G;"
   "vec2 g;"
   "vec3 i,o,z;"
   "A(i,o,z,g,u);"
   "vec4 c=C(o,i);"
   "c.xyz=J(c.xyz,vec3(-x,4.2*u));"
   "r=max(vec4(0),c);"
   "vec4 b=vec4(0);"
   "float y=textureLod(m,I,3.).w;"
   "vec4 p=texture(m,u);"
   "float t=E(p.w,y);"
   "const float D=sqrt(float(64));"
   "for(int l=0;l<64;l++)"
     "{"
       "float w=float(l);"
       "vec2 H=u+e(w*s)*(t*sqrt(w)/D)/n;"
       "vec4 M=texture(m,H);"
       "float B=M.w;"
       "if(B>0.)"
         "{"
           "float h=E(B,y);"
           "b+=vec4(M.xyz,1)*max(.001,h);"
         "}"
     "}"
   "b.xyz/=b.w;"
   "vec4 w=texture(v,u);"
   "vec3 l=mix(b.xyz,w.xyz,.5);"
   "l=max(vec3(0),l);"
   "f=vec4(l,1);"
 "}" 
#endif

