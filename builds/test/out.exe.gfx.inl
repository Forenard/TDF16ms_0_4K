// Generated with Shader Minifier 1.3.6 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADER_MINIFIER_IMPL
#ifndef SHADER_MINIFIER_HEADER
# define SHADER_MINIFIER_HEADER
# define VAR_backBuffer0 "v"
# define VAR_outColor0 "c"
# define VAR_waveOutPosition "m"
#endif
#else // if SHADER_MINIFIER_IMPL
// graphics_fragment_shader.i
"#version 430\n"
 "layout(binding=0) uniform sampler2D v;"
 "layout(location=0) uniform int m;"
 "vec2 f=vec2(1920,1080);"
 "float a=m/4.8e4;"
 "layout(location=0) out vec4 c;"
 "float x;"
 "int i;"
 "const float y=acos(-1.),s=y*2.,z=y*(3.-sqrt(5.));"
 "const vec3 d=vec3(255,137,14)/255.,l=vec3(191,211,255)/255.;"
 "vec2 n(float v)"
 "{"
   "return vec2(cos(v),sin(v));"
 "}"
 "mat2 t(float v)"
 "{"
   "vec2 u=n(v);"
   "return mat2(u.x,u.y,-u.y,u.x);"
 "}"
 "vec3 p(vec3 v)"
 "{"
   "uvec3 u=floatBitsToUint(v);"
   "u=(u>>8U^u.yzx)*1103515245u;"
   "u=(u>>8U^u.yzx)*1103515245u;"
   "u=(u>>8U^u.yzx)*1103515245u;"
   "return vec3(u)/float(-1u);"
 "}"
 "vec3 h(vec2 v)"
 "{"
   "vec2 u=floor(v),y=fract(v);"
   "y=y*y*(3.-2.*y);"
   "vec3 m=mix(p(vec3(u,.12)),p(vec3(u+vec2(1,0),.12)),y.x),x=mix(p(vec3(u+vec2(0,1),.12)),p(vec3(u+vec2(1),.12)),y.x);"
   "return mix(m,x,y.y);"
 "}"
 "vec3 e(vec2 v)"
 "{"
   "const mat2 m=t(z)*2.;"
   "float y=1.;"
   "vec4 u=vec4(0);"
   "for(int f=0;f<6;f++)"
     "u+=y*vec4(h(v),1),y*=.5,v*=m;"
   "return u.xyz/u.w;"
 "}"
 "float r(float v)"
 "{"
   "return v*v*(v*v)*v;"
 "}"
 "vec3 e(vec3 v,float u,float m,vec3 x,vec3 f,vec3 z)"
 "{"
   "float c=m*m;"
   "c=max(c,.001);"
   "vec3 i=.04*(1.-u)+v*u,l=normalize(x+f);"
   "float s=clamp(dot(z,f),0.,1.)+1e-5,a=clamp(dot(z,x),0.,1.),n=clamp(dot(z,l),0.,1.),p=clamp(dot(x,l),0.,1.),b=n*c,d=c/(1.-n*n+b*b),o=c*c,e=.5+2.*c*p*p;"
   "return(d*d/y*(.5/(a*sqrt(max(0.,s*s*(1.-o)+o))+s*sqrt(max(0.,a*a*(1.-o)+o))))*(i+(1.-i)*r(1.-p))+v*(1.-u)*((1.+(e-1.)*r(1.-a))*(1.+(e-1.)*r(1.-s))/y))*a;"
 "}"
 "float e(float v,float x,float y)"
 "{"
   "return min(v,x);"
 "}"
 "float h(float v,float u,float y)"
 "{"
   "return max(v,-u);"
 "}"
 "float e(vec3 v,vec3 y)"
 "{"
   "vec3 u=abs(v)-y*.5;"
   "return min(max(u.x,max(u.y,u.z)),0.)+length(max(u,0.));"
 "}"
 "const vec2 u=vec2(6,4)*.5;"
 "vec2 w(inout vec3 v)"
 "{"
   "vec2 m=floor(v.xy/u)*u+u*.5;"
   "v.xy=mod(v.xy,u)-.5*u;"
   "return m;"
 "}"
 "float b(vec3 v)"
 "{"
   "vec3 m=v;"
   "vec2 c=w(v);"
   "vec3 f=p(vec3(c,0));"
   "float z,l;"
   "vec3 a;"
   "bool d=fract(.5*c.x/u.x)<.5;"
   "float o=float(!d)*1e9,b=float(d)*1e9;"
   "a=abs(fract(m*10.)-.5);"
   "float g=dot(vec3(1),smoothstep(.04,.02,a))/3.*.001;"
   "const float r=u.x*.2;"
   "float t=min(max((v.x--u.x*.5-r)/(u.x*.5-r--u.x*.5-r),0.),1.)*u.y+u.y*.25,B=v.y-t,C=min(min(max((min(abs(B),abs(B+u.y))-u.y*.25)*(r*2./sqrt(u.y*u.y+r*r*4.)),-v.z),-v.z+3.),max(abs(v.x)-u.x*.5+r,-v.z+.5));"
   "C+=g;"
   "a=v-vec3(-u.x*.45,0,-.07);"
   "a.x=abs(a.x-.1)-.1;"
   "C=min(C,length(a.xz)-.07);"
   "a.y=abs(fract(a.y)-.5)-.06;"
   "C=min(C,e(a+vec3(.1,0,0),vec3(.05,0,0))-.01);"
   "vec2 A=abs(vec2(length(a.xz),a.y))-vec2(.08,.02);"
   "C=min(C,min(max(A.x,A.y),0.)+length(max(A,0.)));"
   "C+=o;"
   "float D=-v.z;"
   "D=h(D,e(v,vec3(u-.2,4)),.01);"
   "a=v-vec3(0,0,.75);"
   "a.x=abs(a.x);"
   "const vec2 E=u-.2;"
   "D=e(D,e(a,vec3(E,.05)),.01);"
   "const vec3 F=vec3(E.x*.25-.125,E.y*.75,.1);"
   "D=h(D,e(a-vec3(F.x*.5+.05,-F.y*.1,0),F),.01);"
   "const vec3 G=vec3(F.x,F.y*.5,F.z);"
   "D=h(D,e(a-vec3(G.x*1.5+.15,G.y*.3,0),G),.01);"
   "D=min(D,-.01+e(v-vec3(0,-u.y*.25,.1),vec3(u.x-.2,u.y*.3,.025)));"
   "a=v-vec3(0,-u.y*.25,.1);"
   "a.x=a.x-.2*clamp(round(a.x/.2),-6,6);"
   "D=h(D,e(a,vec3(.06,u.y*.25,.05)),.01);"
   "D=min(D,-.01+e(v-vec3(0,-u.y*.1-.025,0),vec3(u.x-.2,.05,.2)));"
   "z=-.01+e(v-vec3(1.1,-.77,-.02),vec3(.4,.28,.1));"
   "a=v-vec3(1.1,-.77,-.02)-vec3(-.06,0,-.1);"
   "z=h(z,e(a,vec3(0,0,.1))-.1,.005);"
   "a.z-=.05;"
   "z=min(z,length(a)-.015);"
   "const float H=y/32.;"
   "float I=atan(a.y,a.x);"
   "I=mod(I,H*2.)-H;"
   "a.xy=n(I)*length(a.xy);"
   "z=e(z,e(a,vec3(.2,0,0))-.002,.005);"
   "D=min(D,z);"
   "D+=b;"
   "float J=min(D,C),K=smoothstep(0.,1.5,.9-v.y);"
   "vec3 L=v;"
   "L.x*=mix(1.1,1.,K);"
   "float M=f.x*s,N=x*.5+M,O=cos(M+L.x*y*7.+.5*y*cos(L.x*7.))*.05+cos(L.x*2.+N*2.+.5*y*cos(N))*.05;"
   "L-=vec3(0,0,1.+O*K);"
   "z=e(L,vec3(u-.4,.01))*.5-.01;"
   "z+=b;"
   "i=z<J?"
     "1:"
     "0;"
   "J=min(J,z);"
   "l=length(v-vec3(sign(f.x-.5),-.09,0))-.1;"
   "l+=b;"
   "z=length(v-vec3(-u*.5+.1,2.9))-.1;"
   "z+=o;"
   "z=min(z,l);"
   "i=z<J?"
     "2:"
     "i;"
   "return min(J,z);"
 "}"
 "vec2 b(vec3 v,vec3 m,out vec3 a)"
 "{"
   "float f=1.,z=1e2,c,D=0.;"
   "for(int i=0;i<256;i++)"
     "{"
       "a=m+v*D;"
       "a.z=90.<=x&&x<105.?"
         "abs(a.z)-2.:"
         "a.z;"
       "a.xz=105.<=x&&x<120.?"
         "vec2((atan(a.z,a.x)+y)/s*u.x*8.,length(a.xz)-4.):"
         "a.xz;"
       "c=b(a);"
       "float r=c*c/(2.*z),l=sqrt(c*c-r*r);"
       "f=min(f,l/(.02*max(0.,D-r)));"
       "z=c;"
       "vec2 d=(floor((a.xy+sign(v.xy)*u)/u)+.5)*u,C=abs(d-a.xy)-.5*u;"
       "C=max(C,0.)/abs(v.xy)+.001+float(a.z<-2.)*1e2;"
       "c=min(c,min(C.x,C.y));"
       "D+=c;"
       "if(c<.001)"
         "return vec2(1,.05);"
       "if(D>1e2)"
         "return vec2(0,max(f,.05));"
     "}"
   "return vec2(0,max(f,.05));"
 "}"
 "const vec3 o=normalize(vec3(1,1,-1));"
 "void main()"
 "{"
   "x=a;"
   "const vec2 m=gl_FragCoord.xy,z=f.xy,D=m/z;"
   "const vec3 n=p(vec3(m,x));"
   "vec3 C=vec3(1),r=vec3(0,0,-1),F;"
   "float s=x/15.;"
   "int g=int(s)%8;"
   "float L=fract(s),K=g==4?"
     "(floor(L*4.)+L)*.25:"
     "L;"
   "C=mix(vec3[](vec3(.2,.2,2.2),vec3(.4,.2,2),vec3(.8-u.x,-1,0),vec3(-.5,-1.8,-.3),vec3(0,0,-3),vec3(0,0,-6),vec3(0),vec3(0))[g],vec3[](vec3(.1,.1,1.5),vec3(.35,.6,.4),vec3(-.1,-1,0),vec3(.2-u.x,-1.8,-.3),vec3(0,0,-15),vec3(0,30,-9),vec3(-70,0,0),vec3(0,70,0))[g],K);"
   "r=normalize(mix(vec3[](vec3(.5,1.5,1),vec3(-.5,-1,-1),vec3(-1,-.1,.3),vec3(1,.2,.8),vec3(0,0,1),vec3(-.2,0,1),vec3(-1,.2,0),vec3(1,1,0))[g],vec3[](vec3(.1,.1,1),vec3(0,0,-1),vec3(-1,-.1,1),vec3(1,.2,.8),vec3(0,0,1),vec3(.2,0,1),vec3(-1,-.2,0),vec3(0,1,.1))[g],K));"
   "const vec3 I=normalize(cross(vec3(0,1,0),r));"
   "F=normalize(mat3(I,normalize(cross(r,I)),r)*vec3((D-.5+(n.xy-.5)*.25/z)*2.*(z/min(z.x,z.y)),1./tan(75.*y/360.)));"
   "vec3 A;"
   "vec2 G=b(F,C,A),E=vec2(1,-1);"
   "int t=i;"
   "vec3 B=normalize(E.xyy*b(A+E.xyy*.001)+E.yyx*b(A+E.yyx*.001)+E.yxy*b(A+E.yxy*.001)+E.xxx*b(A+E.xxx*.001));"
   "i=t;"
   "vec3 J=sign(B)*abs(B);"
   "J/=dot(vec3(1),J);"
   "vec2 H=(J.x*A.zy+J.y*A.xz+J.z*A.xy)*vec2(3,1);"
   "vec3 M=A;"
   "vec2 N=w(M);"
   "vec3 O=p(vec3(N,0));"
   "float h=0.;"
   "vec3 P=vec3(1);"
   "float Q=.5,R=.5;"
   "vec3 S=mix(d,l,O.x);"
   "if(i==0)"
     "{"
       "vec3 T=e(H*3.),U=e(H*96.);"
       "P=vec3(clamp(1.3*mix(.6,1.,T.y)*mix(.8,1.,pow(U.x,3.)),0.,1.));"
       "Q=mix(.5,1.,pow(T.y,3.));"
       "R=.01;"
       "B=normalize(B+(T*2.-1.)*.05);"
     "}"
   "else if(i==1)"
     "P=vec3[](vec3(.8,.7,.6),vec3(.8,.2,.2),vec3(.5,.7,.8))[int(O.x*3.)],Q=.99,R=.01;"
   "else"
     " h=1.,P=S;"
   "A+=B*.001*2.;"
   "vec3 T;"
   "vec2 U=b(o,A,T);"
   "vec3 V=vec3(0);"
   "V+=U.y*e(P,R,Q,o,-F,B)*l*.5;"
   "vec3 W=(fract(.5*N.x/u.x)<.5?"
     "vec3(-u*.5+.1,2.9):"
     "vec3(sign(O.x-.5),-.06,0))-M;"
   "float X=length(W);"
   "V+=S*pow(1./(1.+max(0.,X-1.)),2.)*e(P,R,Q,W/X,-F,B);"
   "V*=sqrt(clamp(b(A+B*.05)/.05,0.,1.));"
   "V=mix(V,P,h);"
   "vec3 Y=vec3(mix(.01,.3,clamp((F.y+.5)*.5,0.,1.)))*smoothstep(1.,.9,F.y),Z=mix(Y,V,G.x);"
   "Z+=n*.03;"
   "Z=pow(Z,vec3(.6));"
   "Z=Z*(2.51*Z+.03)/(Z*(2.43*Z+.59)+.14);"
   "Z.xy=smoothstep(0.,1.,Z.xy);"
   "Z*=clamp((.5-abs(L-.5))*10.,0.,1.);"
   "vec4 _=vec4(Z,1);"
   "c=mix(_,texture(v,D),.5);"
 "}" 
#endif

