// Generated with Shader Minifier 1.3.6 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADER_MINIFIER_IMPL
#ifndef SHADER_MINIFIER_HEADER
# define SHADER_MINIFIER_HEADER
# define VAR_backBuffer0 "v"
# define VAR_outColor0 "i"
# define VAR_waveOutPosition "m"
#endif
#else // if SHADER_MINIFIER_IMPL
// graphics_fragment_shader.i
"#version 430\n"
 "layout(binding=0) uniform sampler2D v;"
 "layout(location=0) uniform int m;"
 "vec2 f=vec2(1920,1080);"
 "float n=m/4.8e4;"
 "layout(location=0) out vec4 i;"
 "float y;"
 "int c;"
 "const float x=acos(-1.),s=x*2.,z=x*(3.-sqrt(5.));"
 "const vec3 d=vec3(1,.5,.1),a=vec3(.8,.8,.9);"
 "vec2 t(float v)"
 "{"
   "return vec2(cos(v),sin(v));"
 "}"
 "mat2 p(float v)"
 "{"
   "vec2 m=t(v);"
   "return mat2(m.x,m.y,-m.y,m.x);"
 "}"
 "vec3 r(vec3 v)"
 "{"
   "uvec3 f=floatBitsToUint(v);"
   "f=(f>>8U^f.yzx)*1103515245u;"
   "f=(f>>8U^f.yzx)*1103515245u;"
   "f=(f>>8U^f.yzx)*1103515245u;"
   "return vec3(f)/float(-1u);"
 "}"
 "vec3 e(vec2 v)"
 "{"
   "vec2 m=floor(v),f=fract(v);"
   "f=f*f*(3.-2.*f);"
   "vec3 c=mix(r(vec3(m,.12)),r(vec3(m+vec2(1,0),.12)),f.x),x=mix(r(vec3(m+vec2(0,1),.12)),r(vec3(m+vec2(1),.12)),f.x);"
   "return mix(c,x,f.y);"
 "}"
 "vec3 h(vec2 v)"
 "{"
   "const mat2 m=p(z)*2.;"
   "float f=1.;"
   "vec4 c=vec4(0);"
   "for(int i=0;i<6;i++)"
     "c+=f*vec4(e(v),1),f*=.5,v*=m;"
   "return c.xyz/c.w;"
 "}"
 "float w(float v)"
 "{"
   "return v*v*(v*v)*v;"
 "}"
 "vec3 e(vec3 v,float y,float m,vec3 f,vec3 z,vec3 c)"
 "{"
   "float i=m*m;"
   "i=max(i,.001);"
   "vec3 d=.04*(1.-y)+v*y,a=normalize(f+z);"
   "float s=clamp(dot(c,z),0.,1.)+1e-5,l=clamp(dot(c,f),0.,1.),n=clamp(dot(c,a),0.,1.),u=clamp(dot(f,a),0.,1.),o=n*i,r=i/(1.-n*n+o*o),p=i*i,e=.5+2.*i*u*u;"
   "return(r*r/x*(.5/(l*sqrt(max(0.,s*s*(1.-p)+p))+s*sqrt(max(0.,l*l*(1.-p)+p))))*(d+(1.-d)*w(1.-u))+v*(1.-y)*((1.+(e-1.)*w(1.-l))*(1.+(e-1.)*w(1.-s))/x))*l;"
 "}"
 "float e(vec3 v,vec3 x)"
 "{"
   "vec3 m=abs(v)-x*.5;"
   "return min(max(m.x,max(m.y,m.z)),0.)+length(max(m,0.));"
 "}"
 "vec2 l;"
 "float u(vec3 v)"
 "{"
   "l=floor(v.xy/vec2(3,2))*vec2(3,2)+vec2(1.5,1);"
   "vec3 m=v;"
   "v.xy-=l;"
   "vec3 f=r(vec3(l,1));"
   "float i,a;"
   "vec3 z;"
   "bool n=fract(.5*l.x/3.)<.5;"
   "z=abs(fract(m*10)-.5);"
   "float u=min(dot(vec3(1),smoothstep(.02,0.,z)),1)*.001,d=v.y-clamp((v.x+1)*.5,0.,1.)*2-.5,o=min(min(max((min(abs(d),abs(d+2))-.5)*.4,-v.z),-v.z+3),max(abs(v.x)-1,-v.z+.5));"
   "o+=u;"
   "z=v-vec3(-1.35,0,-.07);"
   "z.x=abs(z.x-.1)-.1;"
   "o=min(o,length(z.xz)-.07);"
   "z.y=abs(fract(z.y)-.5)-.07;"
   "o=min(o,e(z+vec3(.1,0,0),vec3(.05,0,0))-.01);"
   "vec2 p=abs(vec2(length(z.xz),z.y))-vec2(.08,.02);"
   "o=min(o,min(max(p.x,p.y),0.)+length(max(p,0.)));"
   "float b=-v.z-.11;"
   "b=max(b,-e(v,vec3(2.8,1.8,4)));"
   "z=v;"
   "z.z-=.75;"
   "z.x=abs(abs(z.x)-.4);"
   "b=min(b,e(z,vec3(3,2,.05)));"
   "b=max(b,-e(z-vec3(.4,-.135,0),vec3(.7,1.35,.1)));"
   "b=min(b,e(v-vec3(0,-.5,.1),vec3(2.8,.6,.025))-.01);"
   "z=v-vec3(.2*clamp(round(v.x/.2),-6,6),-.5,.1);"
   "b=max(b,-e(z,vec3(.1,.5,.05)));"
   "b=min(b,e(v+vec3(0,.225,0),vec3(2.8,.05,.2))-.01);"
   "z=v-vec3(1.15,-.76,0);"
   "i=e(z,vec3(.4,.3,.15)-.02);"
   "z-=vec3(-.06,0,-.11);"
   "i=max(i,-e(z,vec3(0,0,.1))+.1);"
   "z.z-=.05;"
   "z.y-=.01*clamp(round(z.y/.01),-9,9);"
   "i=min(i,e(z,vec3(.2,0,0))-.002);"
   "b=min(b,i);"
   "float g=n?"
     "o:"
     "b,w=smoothstep(0.,2.,1.-v.y);"
   "vec3 h=v;"
   "h.x*=mix(1.2,1.,w);"
   "float t=y+f.x*s,B=cos(h.x*x*8.+cos(h.x*8.))*.05+sin(h.x*4.+t+.5*cos(t))*.05;"
   "h.z-=1.+B*w;"
   "i=e(h,vec3(2.6,1.6,.01))*.5-.01;"
   "i+=float(n)*1e9;"
   "c=i<g?"
     "1:"
     "0;"
   "g=min(g,i);"
   "a=length(v-vec3(sign(f.x-.5),-.09,0))-.1;"
   "i=length(v-vec3(-1.4,-.9,2.9))-.1;"
   "i=n?"
     "i:"
     "a;"
   "c=i<g?"
     "2:"
     "c;"
   "return min(g,i);"
 "}"
 "vec2 e(vec3 v,vec3 m,out vec3 f)"
 "{"
   "float i=1.,z=1e2,c,b=0.;"
   "for(int o=0;o<256;o++)"
     "{"
       "f=m+v*b;"
       "f.z=90.<=y&&y<105.?"
         "abs(f.z)-2.:"
         "f.z;"
       "f.xz=105.<=y&&y<120.?"
         "vec2((atan(f.z,f.x)+x)/s*3*16,length(f.xz)-4.):"
         "f.xz;"
       "float d=n/.1171875/4+floor(f.x/6);"
       "f.y+=3.*(floor(d/4.)-pow(1./(1.+mod(d,4.)),5.))*sign(fract(f.x/12)-.5)*step(75.,y);"
       "c=u(f);"
       "float l=c*c/(2.*z),a=sqrt(c*c-l*l);"
       "i=min(i,a/(.01*max(0.,b-l)));"
       "z=c;"
       "vec2 e=floor(f.xy/vec2(3,2)+sign(v.xy))*vec2(3,2)+vec2(1.5,1),r=abs(e-f.xy)-vec2(1.5,1);"
       "r=max(r,0.)/abs(v.xy)+.001+step(f.z,-3.)*1e2;"
       "float g=min(r.x,r.y);"
       "c=min(g,c);"
       "b+=c;"
       "if(c<.001)"
         "return vec2(1,.01);"
       "if(b>1e2)"
         "return vec2(0,max(i,.01));"
     "}"
   "return vec2(1,max(i,.01));"
 "}"
 "const vec3 o=normalize(vec3(1,1.5,-1));"
 "void main()"
 "{"
   "y=n;"
   "const vec2 m=gl_FragCoord.xy,z=f.xy,b=m/z;"
   "const vec3 s=r(vec3(m,y));"
   "vec3 g=vec3(1),p=vec3(0,0,-1),w;"
   "float t=y/15.;"
   "int B=int(t)%8;"
   "float C=fract(t)*step(t,8),A=B==4?"
     "(floor(C*4.)+C)*.25:"
     "C;"
   "g=mix(vec3[](vec3(.2,.2,2.2),vec3(.4,.2,2),vec3(-2.2,-1,0),vec3(-.5,-1.8,-.3),vec3(0,0,-3),vec3(0,0,-6),vec3(0),vec3(0))[B],vec3[](vec3(.1,.1,1.5),vec3(.35,.6,.4),vec3(-.1,-1,0),vec3(-2.8,-1.8,-.3),vec3(0,0,-15),vec3(0,30,-9),vec3(-70,0,0),vec3(0,70,0))[B],A);"
   "p=normalize(mix(vec3[](vec3(.5,1.5,1),vec3(-.5,-1,-1),vec3(-1,-.1,.3),vec3(.8,.2,1),vec3(0,0,1),vec3(-.2,0,1),vec3(-1,.2,0),vec3(1,1,0))[B],vec3[](vec3(.1,.1,1),vec3(0,0,-1),vec3(-1,-.1,1),vec3(.8,.2,1.5),vec3(0,0,1),vec3(.2,0,1),vec3(-1,-.2,0),vec3(0,1,.1))[B],A));"
   "const vec3 D=normalize(cross(vec3(0,1,0),p));"
   "w=normalize(mat3(D,normalize(cross(p,D)),p)*vec3((b-.5+(s.xy-.5)*.25/z)*2.*(z/min(z.x,z.y)),1./tan(75.*x/360.)));"
   "vec3 E;"
   "vec2 F=e(w,g,E),G=vec2(1,-1);"
   "int H=c;"
   "vec3 I=normalize(G.xyy*u(E+G.xyy*.001)+G.yyx*u(E+G.yyx*.001)+G.yxy*u(E+G.yxy*.001)+G.xxx*u(E+G.xxx*.001));"
   "c=H;"
   "vec3 J=sign(I)*abs(I);"
   "J/=dot(vec3(1),J);"
   "vec2 K=(J.x*E.zy+J.y*E.xz+J.z*E.xy)*vec2(3,1);"
   "vec3 L=E;"
   "L.xy-=l;"
   "vec3 M=r(vec3(l,1));"
   "bool N=fract(.5*l.x/3.)<.5;"
   "float O=0.;"
   "vec3 P=vec3(1);"
   "float Q=.5,R=.5;"
   "vec3 S=mix(d,a,M.x);"
   "if(c==0)"
     "{"
       "vec3 T=h(K*3.),U=h(K*96.);"
       "P=vec3(min(1.3*mix(.5,1.,T.y)*mix(.9,1.,pow(U.x,3.)),1));"
       "Q=P.x*.5;"
       "R=.01;"
       "I=normalize(I+(T-.5)*.1);"
     "}"
   "else if(c==1)"
     "P=vec3[](vec3(.8,.7,.6),vec3(.8,.2,.2),vec3(.5,.7,.8))[int(M.x*3.)],Q=.99,R=.01;"
   "else"
     " O=1.,P=S;"
   "E+=I*.001*2.;"
   "vec3 T;"
   "vec2 U=e(o,E,T);"
   "vec3 V=vec3(0);"
   "V+=U.y*e(P,R,Q,o,-w,I)*a*.5;"
   "vec3 W=(N?"
     "vec3(-1.4,-.9,2.9):"
     "vec3(sign(M.x-.5),-.06,0))-L;"
   "float X=length(W);"
   "V+=S*pow(1./(1.+max(0.,X-1.)),2.)*e(P,R,Q,W/X,-w,I);"
   "V*=sqrt(clamp(u(E+I*.05)/.05,0.,1.));"
   "V=mix(V,P,O);"
   "vec3 Y=vec3(mix(.01,.3,clamp((w.y+.5)*.5,0.,1.)))*smoothstep(1.,.9,w.y),Z=mix(Y,V,F.x);"
   "Z+=s*.03;"
   "Z=pow(Z,vec3(.8));"
   "Z=Z*(2.51*Z+.03)/(Z*(2.43*Z+.59)+.14);"
   "Z*=min((.5-abs(C-.5))*10,1);"
   "vec4 _=vec4(Z,1);"
   "i=mix(_,texture(v,b),.7);"
 "}" 
#endif

