// Generated with Shader Minifier 1.3.6 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADER_MINIFIER_IMPL
#ifndef SHADER_MINIFIER_HEADER
# define SHADER_MINIFIER_HEADER
# define VAR_backBuffer0 "v"
# define VAR_backBuffer1 "m"
# define VAR_backBuffer2 "o"
# define VAR_backBuffer3 "s"
# define VAR_outColor0 "r"
# define VAR_outColor1 "u"
# define VAR_outColor2 "e"
# define VAR_outColor3 "f"
# define VAR_waveOutPosition "a"
#endif
#else // if SHADER_MINIFIER_IMPL
// graphics_fragment_shader.i
"#version 430\n"
 "layout(binding=0) uniform sampler2D v;"
 "layout(binding=1) uniform sampler2D m;"
 "layout(binding=2) uniform sampler2D o;"
 "layout(binding=3) uniform sampler2D s;"
 "layout(location=0) uniform int a;"
 "vec2 n=vec2(1920,1080);"
 "float c=a/4.8e4;"
 "layout(location=0) out vec4 r;"
 "layout(location=1) out vec4 u;"
 "layout(location=2) out vec4 e;"
 "layout(location=3) out vec4 f;"
 "float y;"
 "int i;"
 "const float x=acos(-1.),g=2.*x,C=x*(3.-sqrt(5.));"
 "mat2 t(float v)"
 "{"
   "float f=cos(v),z=sin(v);"
   "return mat2(f,-z,z,f);"
 "}"
 "vec2 d(float v)"
 "{"
   "return vec2(cos(v),sin(v));"
 "}"
 "vec2 p(vec2 v)"
 "{"
   "float f=atan(v.y,v.x)+g-x*.5+x/32.;"
   "f=mod(f,g/32.)+x*.5-x/32.;"
   "return d(f)*length(v);"
 "}"
 "mat3 h(vec3 v)"
 "{"
   "v=normalize(v);"
   "vec3 f=vec3(0,1,0),z=normalize(cross(f,v));"
   "f=normalize(cross(v,z));"
   "return mat3(z,f,v);"
 "}struct Material{int type;vec3 albedo;float metallic;float roughness;};"
 "float l(float v)"
 "{"
   "return v*v*(v*v)*v;"
 "}"
 "float d(float v,float y)"
 "{"
   "float f=y*v,z=v/(1.-y*y+f*f);"
   "return z*z*(1./x);"
 "}"
 "float d(float v,float f,float y)"
 "{"
   "float z=v*v;"
   "return.5/(y*sqrt(f*f*(1.-z)+z)+f*sqrt(y*y*(1.-z)+z));"
 "}"
 "vec3 h(vec3 v,float z)"
 "{"
   "return v+(1.-v)*l(1.-z);"
 "}"
 "float l(float v,float z)"
 "{"
   "return 1.+(v-1.)*l(1.-z);"
 "}"
 "float d(float v,float f,float m,float y)"
 "{"
   "float z=.5+2.*v*y*y;"
   "return l(m,z)*l(f,z)*(1./x);"
 "}"
 "vec3 h(Material v,vec3 z,vec3 f)"
 "{"
   "vec3 y=normalize(vec3(.5,1,-1)),x=v.albedo;"
   "float m=v.metallic,n=v.roughness,r=n*n;"
   "r=max(r,.001);"
   "vec3 i=normalize(y+z);"
   "float o=abs(dot(f,z))+1e-5,g=clamp(dot(f,y),0.,1.),C=clamp(dot(y,i),0.,1.),l=d(r,clamp(dot(f,i),0.,1.)),E=d(r,o,g);"
   "vec3 s=x*(1.-m)*d(r,o,g,C);"
   "return(l*E*h(.04*(1.-m)+x*m,C)+s)*g;"
 "}"
 "float p(float v,float z)"
 "{"
   "return max(.005,min(v,z))-length(max(vec2(.005-v,.005-z),vec2(0)));"
 "}"
 "float l(float v,float z,float f)"
 "{"
   "return min(-f,max(v,z))+length(max(vec2(f+v,f+z),vec2(0)));"
 "}"
 "float p(float v,float z,float f)"
 "{"
   "return l(v,-z,f);"
 "}"
 "float t(vec3 v,vec3 z)"
 "{"
   "vec3 f=abs(v)-z*.5;"
   "return min(max(f.x,max(f.y,f.z)),0.)+length(max(f,0.));"
 "}"
 "float t(vec3 v,float z,float f)"
 "{"
   "vec2 m=abs(vec2(length(v.xz),v.y))-vec2(f,z);"
   "return min(max(m.x,m.y),0.)+length(max(m,0.));"
 "}"
 "const vec2 z=vec2(5.7,4)*.5;"
 "vec2 M(inout vec3 v)"
 "{"
   "vec2 f=floor(v.xy/z)*z+z*.5;"
   "v.xy=mod(v.xy,z)-.5*z;"
   "return f;"
 "}"
 "float b(vec3 v)"
 "{"
   "vec2 f=M(v);"
   "if(mod(f.x,z.x*2.)<z.x)"
     "return 1e3;"
   "float r=-v.z;"
   "r=p(r,t(v,vec3(z-.2,2)),.01);"
   "r=min(r,-.01+t(v-vec3(0,-z.y*.25,.1),vec3(z.x-.2,z.y*.3,.1)));"
   "vec3 m=v-vec3(0,-z.y*.25,.1);"
   "m.x=m.x-.1*clamp(round(m.x/.1),-12,12);"
   "r=p(r,t(m,vec3(.06,z.y*.25,.15)),.01);"
   "r=min(r,-.01+t(v-vec3(0,-z.y*.1-.025,0),vec3(z.x-.2,.05,.2)));"
   "return min(r,-.01+t(v-vec3(0,-.5*(z.y-.2)-.025,0),vec3(z.x,.05,.2)));"
 "}"
 "float A(vec3 v)"
 "{"
   "vec2 f=M(v);"
   "if(mod(f.x,z.x*2.)<z.x)"
     "return 1e3;"
   "v-=vec3(1.1,-.74,-.02);"
   "vec3 m=v;"
   "float r=-.01+t(m,vec3(.4,.28,.1));"
   "vec3 y=m-vec3(-.06,0,-.1);"
   "r=p(r,t(y.xzy,.1,.1),.005);"
   "y.z-=.05;"
   "r=min(r,-.002+t(y.xzy,.02,.02));"
   "vec3 i=y;"
   "y.xy=p(y.xy);"
   "r=p(r,t(y,.1,.002));"
   "i.z-=.02;"
   "i.xy=p(i.xy*t(x/32.));"
   "return p(r,t(i,.1,.002));"
 "}"
 "float B(vec3 v)"
 "{"
   "vec2 f=M(v);"
   "if(mod(f.x,z.x*2.)>z.x)"
     "return 1e3;"
   "v-=vec3(-z.x*.45,0,-.035);"
   "v.x=abs(v.x-.1)-.1;"
   "float r=t(v,z.y*.51,.07);"
   "v.y=mod(v.y,1.)-.5;"
   "v.y=abs(v.y)-.06;"
   "r=min(r,t(v,.02,.08));"
   "return min(r,t((v-vec3(-.11,0,0)).yxz,.04,.01));"
 "}"
 "float D(vec3 v)"
 "{"
   "v.y+=z.y*.2;"
   "vec3 f=v;"
   "vec2 m=M(v);"
   "if(mod(m.x,z.x*2.)>z.x)"
     "return 1e3;"
   "f=abs(fract(f*10.)-.5);"
   "float n=clamp(smoothstep(.04,.02,f.x)+smoothstep(.04,.02,f.y),0.,1.)*.002,y=-v.z+3.;"
   "const float x=z.x*.2;"
   "float r=clamp((v.x--z.x*.5-x)/(z.x*.5-x--z.x*.5-x)*z.y,min(0.,z.y),max(0.,z.y));"
   "const vec3 i=vec3(z.x,z.y*.5,3),g=vec3(z.x-.2,z.y*.5,3);"
   "float l=t(v-vec3(0,r-z.y,1.5),i);"
   "l=min(l,t(v-vec3(0,r,1.5),i));"
   "l=p(l,t(v-vec3(0,r-z.y+.1,1.6),g),.01);"
   "l=p(l,t(v-vec3(0,r+.1,1.6),g),.01);"
   "l*=x*2./sqrt(z.y*z.y+x*x*4.);"
   "l=min(l,t(v-vec3(0,0,2),vec3(z.x-x*2.,z.y,3)));"
   "l=min(l,y);"
   "l-=.01;"
   "l+=n;"
   "return l;"
 "}"
 "void A(float v,inout float f,inout int z)"
 "{"
   "if(v<f)"
     "f=v,i=z;"
   "z++;"
 "}"
 "float E(vec3 v)"
 "{"
   "int f=0;"
   "i=-1;"
   "float z=1e3;"
   "A(b(v),z,f);"
   "A(A(v),z,f);"
   "A(D(v),z,f);"
   "A(B(v),z,f);"
   "return z;"
 "}"
 "vec3 F(vec3 v)"
 "{"
   "const vec2 f=vec2(1,-1);"
   "int m=i;"
   "vec3 z=normalize(f.xyy*E(v+f.xyy*.001)+f.yyx*E(v+f.yyx*.001)+f.yxy*E(v+f.yxy*.001)+f.xxx*E(v+f.xxx*.001));"
   "i=m;"
   "return z;"
 "}"
 "vec3 B(vec3 v,vec3 f,vec3 z)"
 "{"
   "vec3 r=abs((floor((v+sign(f)*z)/z)+.5)*z-v)-.5*z;"
   "r=max(r,0.);"
   "r/=abs(f);"
   "return r;"
 "}"
 "bool D(vec3 v,vec3 f,out vec3 r)"
 "{"
   "float m,l=0.;"
   "for(int i=0;i<128;i++)"
     "{"
       "r=f+v*l;"
       "m=E(r);"
       "vec3 y=B(r,v,vec3(z,1000));"
       "m=min(m,y.x+.001);"
       "m=min(m,y.y+.001);"
       "l+=m;"
       "if(m<.001)"
         "return true;"
       "if(l>1e3)"
         "return false;"
     "}"
   "return true;"
 "}"
 "Material A(vec3 v,inout vec3 z)"
 "{"
   "return Material(0,vec3(1),.5,.5);"
 "}"
 "vec3 G(vec3 v)"
 "{"
   "vec3 f=vec3(0);"
   "f=mix(vec3(.5,.6,.7),vec3(.8,.9,1),.5*(v.y+1.));"
   "return vec3(1,0,0);"
 "}"
 "vec3 A(Material v,vec3 f,vec3 z,vec3 m)"
 "{"
   "vec3 r=vec3(0);"
   "r+=h(v,z,m)*vec3(1);"
   "return r;"
 "}"
 "vec3 E(inout vec3 v,vec3 f,vec3 z)"
 "{"
   "Material r=A(v,z);"
   "if(r.type==1)"
     "return r.albedo;"
   "v+=z*.001;"
   "return A(r,v,f,z);"
 "}"
 "vec3 B(vec3 v,vec3 z)"
 "{"
   "vec3 f;"
   "if(!D(v,z,f))"
     "return G(v);"
   "vec3 m=F(f);"
   "return E(f,-v,m);"
 "}"
 "void D(out vec2 v,out vec2 f)"
 "{"
   "vec2 m=gl_FragCoord.xy,z=n.xy;"
   "v=m/z;"
   "f=(v*2.-1.)*(z/min(z.x,z.y));"
   "y=c;"
 "}"
 "void B(out vec3 v,out vec3 f,out vec3 r,vec2 z)"
 "{"
   "v=vec3(3+y,y*.5,-3);"
   "r=normalize(vec3(.5,-.5,1));"
   "mat3 m=h(r);"
   "float i=1./tan(60.*x/360.);"
   "i-=i*length(z)*0.;"
   "vec3 l,g,o,c;"
   "l=normalize(m*vec3(z,i));"
   "g=v;"
   "o=r;"
   "c+=m*vec3(z*2.5,-5)+v;"
   "f=normalize(mix(o,l,1.));"
   "v=mix(c,g,1.);"
 "}"
 "void main()"
 "{"
   "vec2 v,z;"
   "D(v,z);"
   "vec3 f,m,y;"
   "B(f,m,y,z);"
   "vec3 l=B(m,f);"
   "l=l;"
   "l=l;"
   "r=vec4(l,1);"
 "}" 
#endif

